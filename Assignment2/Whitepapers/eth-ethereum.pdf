





<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
  <link rel="dns-prefetch" href="https://github.githubassets.com">
  <link rel="dns-prefetch" href="https://avatars0.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars1.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars2.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars3.githubusercontent.com">
  <link rel="dns-prefetch" href="https://github-cloud.s3.amazonaws.com">
  <link rel="dns-prefetch" href="https://user-images.githubusercontent.com/">



  <link crossorigin="anonymous" media="all" integrity="sha512-/YEVWs7BzxfKyUd6zVxjEQcXRWsLbcEjv045Rq8DSoipySmQblhVKxlXLva2GtNd5DhwCxHwW1RM0N9I7S2Vew==" rel="stylesheet" href="https://github.githubassets.com/assets/frameworks-481a47a96965f6706fb41bae0d14b09a.css" />
  <link crossorigin="anonymous" media="all" integrity="sha512-xod5+iick6st6a0tvmfiqwCFLFTRzOkGLX0SAqY7SQFl0Q3sWxKUB2rm1Kw4Vz/57FMg7chtfVYeUB/Yr/xmFQ==" rel="stylesheet" href="https://github.githubassets.com/assets/site-d3c48f1b58ea95d9efb184fd4592b411.css" />
    <link crossorigin="anonymous" media="all" integrity="sha512-dDnCHJtEv2Hu49bx+DrWxu249TjieZ9um/g3uHqaXDSd2eNDLfSooD46uiGU3IJXiaMNJ6W0IoCcTjq6gTh8QA==" rel="stylesheet" href="https://github.githubassets.com/assets/github-3d951771a4ed5753620b461a24fd4154.css" />
    
    
    
    


  <meta name="viewport" content="width=device-width">
  
  <title>White Paper · ethereum/wiki Wiki · GitHub</title>
    <meta name="description" content="The Ethereum Wiki. Contribute to ethereum/wiki development by creating an account on GitHub.">
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
  <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
  <meta property="fb:app_id" content="1401488693436528">

    <meta name="twitter:image:src" content="https://avatars3.githubusercontent.com/u/6250754?s=400&amp;v=4" /><meta name="twitter:site" content="@github" /><meta name="twitter:card" content="summary" /><meta name="twitter:title" content="ethereum/wiki" /><meta name="twitter:description" content="The Ethereum Wiki. Contribute to ethereum/wiki development by creating an account on GitHub." />
    <meta property="og:image" content="https://avatars3.githubusercontent.com/u/6250754?s=400&amp;v=4" /><meta property="og:site_name" content="GitHub" /><meta property="og:type" content="object" /><meta property="og:title" content="ethereum/wiki" /><meta property="og:url" content="https://github.com/ethereum/wiki" /><meta property="og:description" content="The Ethereum Wiki. Contribute to ethereum/wiki development by creating an account on GitHub." />

  <link rel="assets" href="https://github.githubassets.com/">
  
  

    <meta name="request-id" content="72A4:2D92:B7C78F:1163D74:5DD79F81" data-pjax-transient>


  

  <meta name="selected-link" value="repo_wiki" data-pjax-transient>

      <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
    <meta name="google-site-verification" content="ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA">
    <meta name="google-site-verification" content="GXs5KoUUkNCoaAZn7wPN-t01Pywp9M3sEjnt_3_ZWPc">

    <meta name="octolytics-host" content="collector.githubapp.com" /><meta name="octolytics-app-id" content="github" /><meta name="octolytics-event-url" content="https://collector.githubapp.com/github-external/browser_event" /><meta name="octolytics-dimension-request_id" content="72A4:2D92:B7C78F:1163D74:5DD79F81" /><meta name="octolytics-dimension-region_edge" content="ams" /><meta name="octolytics-dimension-region_render" content="iad" /><meta name="octolytics-dimension-ga_id" content="" class="js-octo-ga-id" /><meta name="octolytics-dimension-visitor_id" content="5802486950021013377" />

<meta name="analytics-location" content="/&lt;user-name&gt;/&lt;repo-name&gt;/wiki/show" data-pjax-transient="true" />



    <meta name="google-analytics" content="UA-3769691-2">


<meta class="js-ga-set" name="dimension1" content="Logged Out">



  

      <meta name="hostname" content="github.com">
    <meta name="user-login" content="">

      <meta name="expected-hostname" content="github.com">

      <meta name="js-proxy-site-detection-payload" content="YzdkZmIyNTUyZjJmY2FjOTkzZDQzZjM3ODg3Yjc1MzY3YzMwZGZhM2JiMWIzYmU2OTk1OGFiYjU2ZjdiYmRlN3x7InJlbW90ZV9hZGRyZXNzIjoiMjEzLjE0Mi45Ni42OSIsInJlcXVlc3RfaWQiOiI3MkE0OjJEOTI6QjdDNzhGOjExNjNENzQ6NURENzlGODEiLCJ0aW1lc3RhbXAiOjE1NzQ0MTIxNjEsImhvc3QiOiJnaXRodWIuY29tIn0=">

    <meta name="enabled-features" content="ACTIONS_V2_ON_MARKETPLACE,MARKETPLACE_FEATURED_BLOG_POSTS,MARKETPLACE_INVOICED_BILLING,MARKETPLACE_SOCIAL_PROOF_CUSTOMERS,MARKETPLACE_TRENDING_SOCIAL_PROOF,MARKETPLACE_RECOMMENDATIONS,MARKETPLACE_PENDING_INSTALLATIONS">

    <meta name="html-safe-nonce" content="09650f68c9cba02846f6552037093691c9a327f8">

  <meta http-equiv="x-pjax-version" content="4b72c447ac1fe287ba22f879e622e715">
  

      <link href="https://github.com/ethereum/wiki/commits/master.atom" rel="alternate" title="Recent Commits to wiki:master" type="application/atom+xml">

  <meta name="go-import" content="github.com/ethereum/wiki git https://github.com/ethereum/wiki.git">

  <meta name="octolytics-dimension-user_id" content="6250754" /><meta name="octolytics-dimension-user_login" content="ethereum" /><meta name="octolytics-dimension-repository_id" content="16852060" /><meta name="octolytics-dimension-repository_nwo" content="ethereum/wiki" /><meta name="octolytics-dimension-repository_public" content="true" /><meta name="octolytics-dimension-repository_is_fork" content="false" /><meta name="octolytics-dimension-repository_network_root_id" content="16852060" /><meta name="octolytics-dimension-repository_network_root_nwo" content="ethereum/wiki" /><meta name="octolytics-dimension-repository_explore_github_marketplace_ci_cta_shown" content="false" />




  <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">

  <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">

  <link rel="mask-icon" href="https://github.githubassets.com/pinned-octocat.svg" color="#000000">
  <link rel="icon" type="image/x-icon" class="js-site-favicon" href="https://github.githubassets.com/favicon.ico">

<meta name="theme-color" content="#1e2327">





  <link rel="manifest" href="/manifest.json" crossOrigin="use-credentials">

  </head>

  <body class="logged-out env-production page-responsive">
    

  <div class="position-relative js-header-wrapper ">
    <a href="#start-of-content" tabindex="1" class="px-2 py-4 bg-blue text-white show-on-focus js-skip-to-content">Skip to content</a>
    <span class="Progress progress-pjax-loader position-fixed width-full js-pjax-loader-bar">
      <span class="progress-pjax-loader-bar top-0 left-0" style="width: 0%;"></span>
    </span>

    
    
    


        <header class="Header-old header-logged-out js-details-container Details position-relative f4 py-2" role="banner">
  <div class="container-lg d-lg-flex flex-items-center p-responsive">
    <div class="d-flex flex-justify-between flex-items-center">
        <a class="mr-4" href="https://github.com/" aria-label="Homepage" data-ga-click="(Logged out) Header, go to homepage, icon:logo-wordmark">
          <svg height="32" class="octicon octicon-mark-github text-white" viewBox="0 0 16 16" version="1.1" width="32" aria-hidden="true"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"/></svg>
        </a>

          <div class="d-lg-none css-truncate css-truncate-target width-fit p-2">
            
              <svg class="octicon octicon-repo" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
    <a class="Header-link" href="/ethereum">ethereum</a>
    /
    <a class="Header-link" href="/ethereum/wiki">wiki</a>


          </div>

        <div class="d-flex flex-items-center">
            <a href="/join?source=header-repo"
              class="d-inline-block d-lg-none f5 text-white no-underline border border-gray-dark rounded-2 px-2 py-1 mr-3 mr-sm-5"
              data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;client_id&quot;:null,&quot;originating_request_id&quot;:&quot;72A4:2D92:B7C78F:1163D74:5DD79F81&quot;,&quot;originating_url&quot;:&quot;https://github.com/ethereum/wiki/wiki/White-Paper&quot;,&quot;referrer&quot;:null,&quot;user_id&quot;:null}}" data-hydro-click-hmac="b4abb337384d1a7a26b999b0edae6cca9ebf6a5500da782607c3755359335e83"
              data-ga-click="(Logged out) Header, clicked Sign up, text:sign-up">
              Sign&nbsp;up
            </a>

          <button class="btn-link d-lg-none mt-1 js-details-target" type="button" aria-label="Toggle navigation" aria-expanded="false">
            <svg height="24" class="octicon octicon-three-bars text-white" viewBox="0 0 12 16" version="1.1" width="18" aria-hidden="true"><path fill-rule="evenodd" d="M11.41 9H.59C0 9 0 8.59 0 8c0-.59 0-1 .59-1H11.4c.59 0 .59.41.59 1 0 .59 0 1-.59 1h.01zm0-4H.59C0 5 0 4.59 0 4c0-.59 0-1 .59-1H11.4c.59 0 .59.41.59 1 0 .59 0 1-.59 1h.01zM.59 11H11.4c.59 0 .59.41.59 1 0 .59 0 1-.59 1H.59C0 13 0 12.59 0 12c0-.59 0-1 .59-1z"/></svg>
          </button>
        </div>
    </div>

    <div class="HeaderMenu HeaderMenu--logged-out position-fixed top-0 right-0 bottom-0 height-fit position-lg-relative d-lg-flex flex-justify-between flex-items-center flex-auto">
      <div class="d-flex d-lg-none flex-justify-end border-bottom bg-gray-light p-3">
        <button class="btn-link js-details-target" type="button" aria-label="Toggle navigation" aria-expanded="false">
          <svg height="24" class="octicon octicon-x text-gray" viewBox="0 0 12 16" version="1.1" width="18" aria-hidden="true"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>
        </button>
      </div>

        <nav class="mt-0 px-3 px-lg-0 mb-5 mb-lg-0" aria-label="Global">
          <ul class="d-lg-flex list-style-none">
              <li class="d-block d-lg-flex flex-lg-nowrap flex-lg-items-center border-bottom border-lg-bottom-0 mr-0 mr-lg-3 edge-item-fix position-relative flex-wrap flex-justify-between d-flex flex-items-center ">
                <details class="HeaderMenu-details details-overlay details-reset width-full">
                  <summary class="HeaderMenu-summary HeaderMenu-link px-0 py-3 border-0 no-wrap d-block d-lg-inline-block">
                    Why GitHub?
                    <svg x="0px" y="0px" viewBox="0 0 14 8" xml:space="preserve" fill="none" class="icon-chevon-down-mktg position-absolute position-lg-relative">
                      <path d="M1,1l6.2,6L13,1"></path>
                    </svg>
                  </summary>
                  <div class="dropdown-menu flex-auto rounded-1 bg-white px-0 mt-0 pb-4 p-lg-4 position-relative position-lg-absolute left-0 left-lg-n4">
                    <a href="/features" class="py-2 lh-condensed-ultra d-block link-gray-dark no-underline h5 Bump-link--hover" data-ga-click="(Logged out) Header, go to Features">Features <span class="Bump-link-symbol float-right text-normal text-gray-light">&rarr;</span></a>
                    <ul class="list-style-none f5 pb-3">
                      <li class="edge-item-fix"><a href="/features/code-review/" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Code review">Code review</a></li>
                      <li class="edge-item-fix"><a href="/features/project-management/" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Project management">Project management</a></li>
                      <li class="edge-item-fix"><a href="/features/integrations" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Integrations">Integrations</a></li>
                      <li class="edge-item-fix"><a href="/features/actions" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Actions">Actions</a></li>
                          <li class="edge-item-fix"><a href="/features/packages" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to GitHub Packages">Packages</a></li>
                      <li class="edge-item-fix"><a href="/features/security" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Security">Security</a></li>
                      <li class="edge-item-fix"><a href="/features#team-management" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Team management">Team management</a></li>
                      <li class="edge-item-fix"><a href="/features#social-coding" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Social coding">Social coding</a></li>
                      <li class="edge-item-fix"><a href="/features#documentation" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Documentation">Documentation</a></li>
                      <li class="edge-item-fix"><a href="/features#code-hosting" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Code hosting">Code hosting</a></li>
                    </ul>

                    <ul class="list-style-none mb-0 border-lg-top pt-lg-3">
                      <li class="edge-item-fix"><a href="/customer-stories" class="py-2 lh-condensed-ultra d-block no-underline link-gray-dark no-underline h5 Bump-link--hover" data-ga-click="(Logged out) Header, go to Customer stories">Customer stories <span class="Bump-link-symbol float-right text-normal text-gray-light">&rarr;</span></a></li>
                      <li class="edge-item-fix"><a href="/security" class="py-2 lh-condensed-ultra d-block no-underline link-gray-dark no-underline h5 Bump-link--hover" data-ga-click="(Logged out) Header, go to Security">Security <span class="Bump-link-symbol float-right text-normal text-gray-light">&rarr;</span></a></li>
                    </ul>
                  </div>
                </details>
              </li>
              <li class="border-bottom border-lg-bottom-0 mr-0 mr-lg-3">
                <a href="/enterprise" class="HeaderMenu-link no-underline py-3 d-block d-lg-inline-block" data-ga-click="(Logged out) Header, go to Enterprise">Enterprise</a>
              </li>

              <li class="d-block d-lg-flex flex-lg-nowrap flex-lg-items-center border-bottom border-lg-bottom-0 mr-0 mr-lg-3 edge-item-fix position-relative flex-wrap flex-justify-between d-flex flex-items-center ">
                <details class="HeaderMenu-details details-overlay details-reset width-full">
                  <summary class="HeaderMenu-summary HeaderMenu-link px-0 py-3 border-0 no-wrap d-block d-lg-inline-block">
                    Explore
                    <svg x="0px" y="0px" viewBox="0 0 14 8" xml:space="preserve" fill="none" class="icon-chevon-down-mktg position-absolute position-lg-relative">
                      <path d="M1,1l6.2,6L13,1"></path>
                    </svg>
                  </summary>

                  <div class="dropdown-menu flex-auto rounded-1 bg-white px-0 pt-2 pb-0 mt-0 pb-4 p-lg-4 position-relative position-lg-absolute left-0 left-lg-n4">
                    <ul class="list-style-none mb-3">
                      <li class="edge-item-fix"><a href="/explore" class="py-2 lh-condensed-ultra d-block link-gray-dark no-underline h5 Bump-link--hover" data-ga-click="(Logged out) Header, go to Explore">Explore GitHub <span class="Bump-link-symbol float-right text-normal text-gray-light">&rarr;</span></a></li>
                    </ul>

                    <h4 class="text-gray-light text-normal text-mono f5 mb-2 border-lg-top pt-lg-3">Learn &amp; contribute</h4>
                    <ul class="list-style-none mb-3">
                      <li class="edge-item-fix"><a href="/topics" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Topics">Topics</a></li>
                        <li class="edge-item-fix"><a href="/collections" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Collections">Collections</a></li>
                      <li class="edge-item-fix"><a href="/trending" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Trending">Trending</a></li>
                      <li class="edge-item-fix"><a href="https://lab.github.com/" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Learning lab">Learning Lab</a></li>
                      <li class="edge-item-fix"><a href="https://opensource.guide" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Open source guides">Open source guides</a></li>
                    </ul>

                    <h4 class="text-gray-light text-normal text-mono f5 mb-2 border-lg-top pt-lg-3">Connect with others</h4>
                    <ul class="list-style-none mb-0">
                      <li class="edge-item-fix"><a href="https://github.com/events" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Events">Events</a></li>
                      <li class="edge-item-fix"><a href="https://github.community" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Community forum">Community forum</a></li>
                      <li class="edge-item-fix"><a href="https://education.github.com" class="py-2 pb-0 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to GitHub Education">GitHub Education</a></li>
                    </ul>
                  </div>
                </details>
              </li>

              <li class="border-bottom border-lg-bottom-0 mr-0 mr-lg-3">
                <a href="/marketplace" class="HeaderMenu-link no-underline py-3 d-block d-lg-inline-block" data-ga-click="(Logged out) Header, go to Marketplace">Marketplace</a>
              </li>

              <li class="d-block d-lg-flex flex-lg-nowrap flex-lg-items-center border-bottom border-lg-bottom-0 mr-0 mr-lg-3 edge-item-fix position-relative flex-wrap flex-justify-between d-flex flex-items-center ">
                <details class="HeaderMenu-details details-overlay details-reset width-full">
                  <summary class="HeaderMenu-summary HeaderMenu-link px-0 py-3 border-0 no-wrap d-block d-lg-inline-block">
                    Pricing
                    <svg x="0px" y="0px" viewBox="0 0 14 8" xml:space="preserve" fill="none" class="icon-chevon-down-mktg position-absolute position-lg-relative">
                       <path d="M1,1l6.2,6L13,1"></path>
                    </svg>
                  </summary>

                  <div class="dropdown-menu flex-auto rounded-1 bg-white px-0 pt-2 pb-4 mt-0 p-lg-4 position-relative position-lg-absolute left-0 left-lg-n4">
                    <a href="/pricing" class="pb-2 lh-condensed-ultra d-block link-gray-dark no-underline h5 Bump-link--hover" data-ga-click="(Logged out) Header, go to Pricing">Plans <span class="Bump-link-symbol float-right text-normal text-gray-light">&rarr;</span></a>

                    <ul class="list-style-none mb-3">
                      <li class="edge-item-fix"><a href="/pricing#feature-comparison" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Compare plans">Compare plans</a></li>
                      <li class="edge-item-fix"><a href="https://enterprise.github.com/contact" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Contact Sales">Contact Sales</a></li>
                    </ul>

                    <ul class="list-style-none mb-0 border-lg-top pt-lg-3">
                      <li class="edge-item-fix"><a href="/nonprofit" class="py-2 lh-condensed-ultra d-block no-underline link-gray-dark no-underline h5 Bump-link--hover" data-ga-click="(Logged out) Header, go to Nonprofits">Nonprofit <span class="Bump-link-symbol float-right text-normal text-gray-light">&rarr;</span></a></li>
                      <li class="edge-item-fix"><a href="https://education.github.com" class="py-2 pb-0 lh-condensed-ultra d-block no-underline link-gray-dark no-underline h5 Bump-link--hover"  data-ga-click="(Logged out) Header, go to Education">Education <span class="Bump-link-symbol float-right text-normal text-gray-light">&rarr;</span></a></li>
                    </ul>
                  </div>
                </details>
              </li>
          </ul>
        </nav>

      <div class="d-lg-flex flex-items-center px-3 px-lg-0 text-center text-lg-left">
          <div class="d-lg-flex mb-3 mb-lg-0">
            <div class="header-search flex-self-stretch flex-lg-self-auto mr-0 mr-lg-3 mb-3 mb-lg-0 scoped-search site-scoped-search js-site-search position-relative js-jump-to"
  role="combobox"
  aria-owns="jump-to-results"
  aria-label="Search or jump to"
  aria-haspopup="listbox"
  aria-expanded="false"
>
  <div class="position-relative">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="js-site-search-form" role="search" aria-label="Site" data-scope-type="Repository" data-scope-id="16852060" data-scoped-search-url="/ethereum/wiki/search" data-unscoped-search-url="/search" action="/ethereum/wiki/search" accept-charset="UTF-8" method="get"><input name="utf8" type="hidden" value="&#x2713;" />
      <label class="form-control input-sm header-search-wrapper p-0 header-search-wrapper-jump-to position-relative d-flex flex-justify-between flex-items-center js-chromeless-input-container">
        <input type="text"
          class="form-control input-sm header-search-input jump-to-field js-jump-to-field js-site-search-focus js-site-search-field is-clearable"
          data-hotkey="s,/"
          name="q"
          value=""
          placeholder="Search"
          data-unscoped-placeholder="Search GitHub"
          data-scoped-placeholder="Search"
          autocapitalize="off"
          aria-autocomplete="list"
          aria-controls="jump-to-results"
          aria-label="Search"
          data-jump-to-suggestions-path="/_graphql/GetSuggestedNavigationDestinations#csrf-token=j1y8NYgzUteSSSRq4l02jMcRxm8/njzy1z7i21BAGzzipEMvkWepEGuzfnLh+Y95j2aZdN1GoN/SlRFrLvnWNw=="
          spellcheck="false"
          autocomplete="off"
          >
          <input type="hidden" class="js-site-search-type-field" name="type" >
            <img src="https://github.githubassets.com/images/search-key-slash.svg" alt="" class="mr-2 header-search-key-slash">

            <div class="Box position-absolute overflow-hidden d-none jump-to-suggestions js-jump-to-suggestions-container">
              
<ul class="d-none js-jump-to-suggestions-template-container">
  

<li class="d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-suggestion" role="option">
  <a tabindex="-1" class="no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2" href="">
    <div class="jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none">
      <svg height="16" width="16" class="octicon octicon-repo flex-shrink-0 js-jump-to-octicon-repo d-none" title="Repository" aria-label="Repository" viewBox="0 0 12 16" version="1.1" role="img"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-project flex-shrink-0 js-jump-to-octicon-project d-none" title="Project" aria-label="Project" viewBox="0 0 15 16" version="1.1" role="img"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 00-1 1v14a1 1 0 001 1h13a1 1 0 001-1V1a1 1 0 00-1-1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-search flex-shrink-0 js-jump-to-octicon-search d-none" title="Search" aria-label="Search" viewBox="0 0 16 16" version="1.1" role="img"><path fill-rule="evenodd" d="M15.7 13.3l-3.81-3.83A5.93 5.93 0 0013 6c0-3.31-2.69-6-6-6S1 2.69 1 6s2.69 6 6 6c1.3 0 2.48-.41 3.47-1.11l3.83 3.81c.19.2.45.3.7.3.25 0 .52-.09.7-.3a.996.996 0 000-1.41v.01zM7 10.7c-2.59 0-4.7-2.11-4.7-4.7 0-2.59 2.11-4.7 4.7-4.7 2.59 0 4.7 2.11 4.7 4.7 0 2.59-2.11 4.7-4.7 4.7z"/></svg>
    </div>

    <img class="avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none" alt="" aria-label="Team" src="" width="28" height="28">

    <div class="jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target">
    </div>

    <div class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none js-jump-to-badge-search">
      <span class="js-jump-to-badge-search-text-default d-none" aria-label="in this repository">
        In this repository
      </span>
      <span class="js-jump-to-badge-search-text-global d-none" aria-label="in all of GitHub">
        All GitHub
      </span>
      <span aria-hidden="true" class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>

    <div aria-hidden="true" class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump">
      Jump to
      <span class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>
  </a>
</li>

</ul>

<ul class="d-none js-jump-to-no-results-template-container">
  <li class="d-flex flex-justify-center flex-items-center f5 d-none js-jump-to-suggestion p-2">
    <span class="text-gray">No suggested jump to results</span>
  </li>
</ul>

<ul id="jump-to-results" role="listbox" class="p-0 m-0 js-navigation-container jump-to-suggestions-results-container js-jump-to-suggestions-results-container">
  

<li class="d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-scoped-search d-none" role="option">
  <a tabindex="-1" class="no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2" href="">
    <div class="jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none">
      <svg height="16" width="16" class="octicon octicon-repo flex-shrink-0 js-jump-to-octicon-repo d-none" title="Repository" aria-label="Repository" viewBox="0 0 12 16" version="1.1" role="img"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-project flex-shrink-0 js-jump-to-octicon-project d-none" title="Project" aria-label="Project" viewBox="0 0 15 16" version="1.1" role="img"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 00-1 1v14a1 1 0 001 1h13a1 1 0 001-1V1a1 1 0 00-1-1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-search flex-shrink-0 js-jump-to-octicon-search d-none" title="Search" aria-label="Search" viewBox="0 0 16 16" version="1.1" role="img"><path fill-rule="evenodd" d="M15.7 13.3l-3.81-3.83A5.93 5.93 0 0013 6c0-3.31-2.69-6-6-6S1 2.69 1 6s2.69 6 6 6c1.3 0 2.48-.41 3.47-1.11l3.83 3.81c.19.2.45.3.7.3.25 0 .52-.09.7-.3a.996.996 0 000-1.41v.01zM7 10.7c-2.59 0-4.7-2.11-4.7-4.7 0-2.59 2.11-4.7 4.7-4.7 2.59 0 4.7 2.11 4.7 4.7 0 2.59-2.11 4.7-4.7 4.7z"/></svg>
    </div>

    <img class="avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none" alt="" aria-label="Team" src="" width="28" height="28">

    <div class="jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target">
    </div>

    <div class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none js-jump-to-badge-search">
      <span class="js-jump-to-badge-search-text-default d-none" aria-label="in this repository">
        In this repository
      </span>
      <span class="js-jump-to-badge-search-text-global d-none" aria-label="in all of GitHub">
        All GitHub
      </span>
      <span aria-hidden="true" class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>

    <div aria-hidden="true" class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump">
      Jump to
      <span class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>
  </a>
</li>

  

<li class="d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-global-search d-none" role="option">
  <a tabindex="-1" class="no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2" href="">
    <div class="jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none">
      <svg height="16" width="16" class="octicon octicon-repo flex-shrink-0 js-jump-to-octicon-repo d-none" title="Repository" aria-label="Repository" viewBox="0 0 12 16" version="1.1" role="img"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-project flex-shrink-0 js-jump-to-octicon-project d-none" title="Project" aria-label="Project" viewBox="0 0 15 16" version="1.1" role="img"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 00-1 1v14a1 1 0 001 1h13a1 1 0 001-1V1a1 1 0 00-1-1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-search flex-shrink-0 js-jump-to-octicon-search d-none" title="Search" aria-label="Search" viewBox="0 0 16 16" version="1.1" role="img"><path fill-rule="evenodd" d="M15.7 13.3l-3.81-3.83A5.93 5.93 0 0013 6c0-3.31-2.69-6-6-6S1 2.69 1 6s2.69 6 6 6c1.3 0 2.48-.41 3.47-1.11l3.83 3.81c.19.2.45.3.7.3.25 0 .52-.09.7-.3a.996.996 0 000-1.41v.01zM7 10.7c-2.59 0-4.7-2.11-4.7-4.7 0-2.59 2.11-4.7 4.7-4.7 2.59 0 4.7 2.11 4.7 4.7 0 2.59-2.11 4.7-4.7 4.7z"/></svg>
    </div>

    <img class="avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none" alt="" aria-label="Team" src="" width="28" height="28">

    <div class="jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target">
    </div>

    <div class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none js-jump-to-badge-search">
      <span class="js-jump-to-badge-search-text-default d-none" aria-label="in this repository">
        In this repository
      </span>
      <span class="js-jump-to-badge-search-text-global d-none" aria-label="in all of GitHub">
        All GitHub
      </span>
      <span aria-hidden="true" class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>

    <div aria-hidden="true" class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump">
      Jump to
      <span class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>
  </a>
</li>


</ul>

            </div>
      </label>
</form>  </div>
</div>

          </div>

        <a href="/login?return_to=%2Fethereum%2Fwiki%2Fwiki%2FWhite-Paper"
          class="HeaderMenu-link no-underline mr-3"
          data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;client_id&quot;:null,&quot;originating_request_id&quot;:&quot;72A4:2D92:B7C78F:1163D74:5DD79F81&quot;,&quot;originating_url&quot;:&quot;https://github.com/ethereum/wiki/wiki/White-Paper&quot;,&quot;referrer&quot;:null,&quot;user_id&quot;:null}}" data-hydro-click-hmac="666f8f3574b9698be621940dcfd58e80b14722abc09f3716cb99329ae157b718"
          data-ga-click="(Logged out) Header, clicked Sign in, text:sign-in">
          Sign&nbsp;in
        </a>
          <a href="/join?source=header-repo&amp;source_repo=ethereum%2Fwiki"
            class="HeaderMenu-link d-inline-block no-underline border border-gray-dark rounded-1 px-2 py-1"
            data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;client_id&quot;:null,&quot;originating_request_id&quot;:&quot;72A4:2D92:B7C78F:1163D74:5DD79F81&quot;,&quot;originating_url&quot;:&quot;https://github.com/ethereum/wiki/wiki/White-Paper&quot;,&quot;referrer&quot;:null,&quot;user_id&quot;:null}}" data-hydro-click-hmac="666f8f3574b9698be621940dcfd58e80b14722abc09f3716cb99329ae157b718"
            data-ga-click="(Logged out) Header, clicked Sign up, text:sign-up">
            Sign&nbsp;up
          </a>
      </div>
    </div>
  </div>
</header>

  </div>

  <div id="start-of-content" class="show-on-focus"></div>


    <div id="js-flash-container">

</div>



  <div class="application-main " data-commit-hovercards-enabled>
        <div itemscope itemtype="http://schema.org/SoftwareSourceCode" class="">
    <main  >
      
  



  









  <div class=" pagehead repohead instapaper_ignore readability-menu experiment-repo-nav pt-0 pt-lg-4 ">
    <div class="repohead-details-container clearfix container-lg p-responsive d-none d-lg-block">

      <ul class="pagehead-actions">




  <li>
    
  <a class="tooltipped tooltipped-s btn btn-sm btn-with-count" aria-label="You must be signed in to watch a repository" rel="nofollow" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;notification subscription menu watch&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;client_id&quot;:null,&quot;originating_request_id&quot;:&quot;72A4:2D92:B7C78F:1163D74:5DD79F81&quot;,&quot;originating_url&quot;:&quot;https://github.com/ethereum/wiki/wiki/White-Paper&quot;,&quot;referrer&quot;:null,&quot;user_id&quot;:null}}" data-hydro-click-hmac="fc191cc6d172059afc3aa90da1be93d065c61b7e21ab21ba0d30858cf07a9845" href="/login?return_to=%2Fethereum%2Fwiki">
    <svg class="octicon octicon-eye v-align-text-bottom" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
    Watch
</a>    <a class="social-count" href="/ethereum/wiki/watchers"
       aria-label="1293 users are watching this repository">
      1.3k
    </a>

  </li>

  <li>
        <a class="btn btn-sm btn-with-count tooltipped tooltipped-s" aria-label="You must be signed in to star a repository" rel="nofollow" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;star button&quot;,&quot;repository_id&quot;:16852060,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;client_id&quot;:null,&quot;originating_request_id&quot;:&quot;72A4:2D92:B7C78F:1163D74:5DD79F81&quot;,&quot;originating_url&quot;:&quot;https://github.com/ethereum/wiki/wiki/White-Paper&quot;,&quot;referrer&quot;:null,&quot;user_id&quot;:null}}" data-hydro-click-hmac="9a55d2b059205a92299a4c25f86360d7122577e14fd0e29ec6d5dde7625b3878" href="/login?return_to=%2Fethereum%2Fwiki">
      <svg class="octicon octicon-star v-align-text-bottom" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74L14 6z"/></svg>
      Star
</a>
    <a class="social-count js-social-count" href="/ethereum/wiki/stargazers"
      aria-label="12826 users starred this repository">
      12.8k
    </a>

  </li>

  <li>
      <a class="btn btn-sm btn-with-count tooltipped tooltipped-s" aria-label="You must be signed in to fork a repository" rel="nofollow" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;repo details fork button&quot;,&quot;repository_id&quot;:16852060,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;client_id&quot;:null,&quot;originating_request_id&quot;:&quot;72A4:2D92:B7C78F:1163D74:5DD79F81&quot;,&quot;originating_url&quot;:&quot;https://github.com/ethereum/wiki/wiki/White-Paper&quot;,&quot;referrer&quot;:null,&quot;user_id&quot;:null}}" data-hydro-click-hmac="8c0500fd819f6bd4818a7a399b14ea1a060ab819acc019c4b61659e888a644e6" href="/login?return_to=%2Fethereum%2Fwiki">
        <svg class="octicon octicon-repo-forked v-align-text-bottom" viewBox="0 0 10 16" version="1.1" width="10" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8 1a1.993 1.993 0 00-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 002 1a1.993 1.993 0 00-1 3.72V6.5l3 3v1.78A1.993 1.993 0 005 15a1.993 1.993 0 001-3.72V9.5l3-3V4.72A1.993 1.993 0 008 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
        Fork
</a>
    <a href="/ethereum/wiki/network/members" class="social-count"
       aria-label="2247 users forked this repository">
      2.2k
    </a>
  </li>
</ul>

      <h1 class="public ">
    <svg class="octicon octicon-repo" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
  <span class="author" itemprop="author"><a class="url fn" rel="author" data-hovercard-type="organization" data-hovercard-url="/orgs/ethereum/hovercard" href="/ethereum">ethereum</a></span><!--
--><span class="path-divider">/</span><!--
--><strong itemprop="name"><a data-pjax="#js-repo-pjax-container" href="/ethereum/wiki">wiki</a></strong>
  

</h1>

    </div>
    
<nav class="hx_reponav reponav js-repo-nav js-sidenav-container-pjax container-lg p-responsive d-none d-lg-block"
     itemscope
     itemtype="http://schema.org/BreadcrumbList"
    aria-label="Repository"
     data-pjax="#js-repo-pjax-container">

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a class="js-selected-navigation-item reponav-item" itemprop="url" data-hotkey="g c" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches repo_packages /ethereum/wiki" href="/ethereum/wiki">
      <svg class="octicon octicon-code" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z"/></svg>
      <span itemprop="name">Code</span>
      <meta itemprop="position" content="1">
</a>  </span>

    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a itemprop="url" data-hotkey="g i" class="js-selected-navigation-item reponav-item" data-selected-links="repo_issues repo_labels repo_milestones /ethereum/wiki/issues" href="/ethereum/wiki/issues">
        <svg class="octicon octicon-issue-opened" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 011.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"/></svg>
        <span itemprop="name">Issues</span>
        <span class="Counter">29</span>
        <meta itemprop="position" content="2">
</a>    </span>

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a data-hotkey="g p" itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="repo_pulls checks /ethereum/wiki/pulls" href="/ethereum/wiki/pulls">
      <svg class="octicon octicon-git-pull-request" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0010 15a1.993 1.993 0 001-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 00-1 3.72v6.56A1.993 1.993 0 002 15a1.993 1.993 0 001-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
      <span itemprop="name">Pull requests</span>
      <span class="Counter">3</span>
      <meta itemprop="position" content="3">
</a>  </span>


    <a data-hotkey="g b" class="js-selected-navigation-item reponav-item" data-selected-links="repo_projects new_repo_project repo_project /ethereum/wiki/projects" href="/ethereum/wiki/projects">
      <svg class="octicon octicon-project" viewBox="0 0 15 16" version="1.1" width="15" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 00-1 1v14a1 1 0 001 1h13a1 1 0 001-1V1a1 1 0 00-1-1z"/></svg>
      Projects
      <span class="Counter" >0</span>
</a>

    <a class="js-selected-navigation-item selected reponav-item" data-hotkey="g w" aria-current="page" data-selected-links="repo_wiki /ethereum/wiki/wiki" href="/ethereum/wiki/wiki">
      <svg class="octicon octicon-book" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M3 5h4v1H3V5zm0 3h4V7H3v1zm0 2h4V9H3v1zm11-5h-4v1h4V5zm0 2h-4v1h4V7zm0 2h-4v1h4V9zm2-6v9c0 .55-.45 1-1 1H9.5l-1 1-1-1H2c-.55 0-1-.45-1-1V3c0-.55.45-1 1-1h5.5l1 1 1-1H15c.55 0 1 .45 1 1zm-8 .5L7.5 3H2v9h6V3.5zm7-.5H9.5l-.5.5V12h6V3z"/></svg>
      Wiki
</a>
    <a data-skip-pjax="true" class="js-selected-navigation-item reponav-item" data-selected-links="security alerts policy code_scanning /ethereum/wiki/security/advisories" href="/ethereum/wiki/security/advisories">
      <svg class="octicon octicon-shield" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M0 2l7-2 7 2v6.02C14 12.69 8.69 16 7 16c-1.69 0-7-3.31-7-7.98V2zm1 .75L7 1l6 1.75v5.268C13 12.104 8.449 15 7 15c-1.449 0-6-2.896-6-6.982V2.75zm1 .75L7 2v12c-1.207 0-5-2.482-5-5.985V3.5z"/></svg>
      Security
</a>
    <a class="js-selected-navigation-item reponav-item" data-selected-links="repo_graphs repo_contributors dependency_graph pulse people /ethereum/wiki/pulse" href="/ethereum/wiki/pulse">
      <svg class="octicon octicon-graph" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M16 14v1H0V0h1v14h15zM5 13H3V8h2v5zm4 0H7V3h2v10zm4 0h-2V6h2v7z"/></svg>
      Insights
</a>

</nav>

  <div class="reponav-wrapper reponav-small d-lg-none">
  <nav class="reponav js-reponav text-center no-wrap"
       itemscope
       itemtype="http://schema.org/BreadcrumbList">

    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a class="js-selected-navigation-item reponav-item" itemprop="url" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches repo_packages /ethereum/wiki" href="/ethereum/wiki">
        <span itemprop="name">Code</span>
        <meta itemprop="position" content="1">
</a>    </span>

      <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
        <a itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="repo_issues repo_labels repo_milestones /ethereum/wiki/issues" href="/ethereum/wiki/issues">
          <span itemprop="name">Issues</span>
          <span class="Counter">29</span>
          <meta itemprop="position" content="2">
</a>      </span>

    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="repo_pulls checks /ethereum/wiki/pulls" href="/ethereum/wiki/pulls">
        <span itemprop="name">Pull requests</span>
        <span class="Counter">3</span>
        <meta itemprop="position" content="3">
</a>    </span>

      <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
        <a itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="repo_projects new_repo_project repo_project /ethereum/wiki/projects" href="/ethereum/wiki/projects">
          <span itemprop="name">Projects</span>
          <span class="Counter">0</span>
          <meta itemprop="position" content="4">
</a>      </span>

      <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
        <a itemprop="url" class="js-selected-navigation-item selected reponav-item" aria-current="page" data-selected-links="repo_wiki /ethereum/wiki/wiki" href="/ethereum/wiki/wiki">
          <span itemprop="name">Wiki</span>
          <meta itemprop="position" content="5">
</a>      </span>

      <a itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="security alerts policy code_scanning /ethereum/wiki/security/advisories" href="/ethereum/wiki/security/advisories">
        <span itemprop="name">Security</span>
        <meta itemprop="position" content="6">
</a>
      <a class="js-selected-navigation-item reponav-item" data-selected-links="pulse /ethereum/wiki/pulse" href="/ethereum/wiki/pulse">
        Pulse
</a>

  </nav>
</div>


  </div>
<div class="container-lg clearfix new-discussion-timeline experiment-repo-nav  p-responsive">
  <div class="repository-content ">

    
    
  <div id="wiki-wrapper" class="page">
          <div class="signup-prompt signup-prompt-unpacking mx-auto mb-6 p-4 border rounded-2"
      style="background-image: url('https://github.githubassets.com/images/modules/site/heroes/octocat-unpacking-hubot.svg')">
      <div class="position-relative">
        <!-- '"` --><!-- </textarea></xmp> --></option></form><form action="/prompt_dismissals/wikis" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="_method" value="put" /><input type="hidden" name="authenticity_token" value="AZ1nKipBXnCw8weTHo+fcALs8vSiT7x15z955A5RelPLOAwjLeppPnhSkpkBawOqYUGMCAujPdHnoXy80j5L/Q==" />
          <button
            type="submit"
            class="position-absolute top-0 right-0 py-1 px-2 border bg-white btn-link link-gray no-underline f6"
            data-ga-click="(Logged out) Sign up prompt, click, text:Dismiss"
            data-ga-load="Wiki, view, type:redesigned sign up prompt">
            Dismiss
          </button>
</form>        <h3 class="col-6 col-md-12 mb-2 lh-condensed">Document your code</h3>
        <p class="col-md-7">
          Every project on GitHub comes with a version-controlled wiki to give your
          documentation the high level of care it deserves. It’s easy to create
          well-maintained, Markdown or rich text documentation alongside your code.
        </p>
        <a class="btn btn-primary mr-2" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;releases sign up prompt&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;client_id&quot;:null,&quot;originating_request_id&quot;:&quot;72A4:2D92:B7C78F:1163D74:5DD79F81&quot;,&quot;originating_url&quot;:&quot;https://github.com/ethereum/wiki/wiki/White-Paper&quot;,&quot;referrer&quot;:null,&quot;user_id&quot;:null}}" data-hydro-click-hmac="3e390b304f5921cf9bdda9d5eabd065a401cfa6295b3bf8b2f12cc73bf1aea38" data-ga-click="(Logged out) Sign up prompt, click, text:Sign up for free" data-ga-load="Wiki, view, type:redesigned sign up prompt" href="/join?source=prompt-wiki-show">Sign up for free</a>
        <a href="/pricing"
          class="d-block d-sm-inline-block mt-2 mt-sm-0"
          data-ga-click="(Logged out) Sign up prompt, click, text:See pricing for teams and enterprises"
          data-ga-load="Wiki, view, type:redesigned sign up prompt">
          See pricing for teams and enterprises
        </a>
      </div>
    </div>


    <div class="d-flex flex-column flex-md-row gh-header">
      <h1 class="flex-auto min-width-0 mb-2 mb-md-0 mr-0 mr-md-2 gh-header-title instapaper_title">White Paper</h1>

        <div class="mt-0 mt-lg-1 flex-shrink-0 gh-header-actions">
          <a href="#wiki-pages-box" class="d-md-none ">Jump to bottom</a>

        </div>
    </div>

    <div class="mt-2 mt-md-1 pb-3 gh-header-meta">
      Chris Chinchilla edited this page <relative-time datetime="2019-06-17T07:59:50Z" class="no-wrap">Jun 17, 2019</relative-time>
      &middot;
      <a href="/ethereum/wiki/wiki/White-Paper/_history" class="muted-link">
        176 revisions
      </a>
    </div>

  <div id="wiki-content" class="d-flex flex-column flex-md-row">
    <div id="wiki-body" class="mt-4 flex-auto min-width-0 gollum-markdown-content instapaper_body">
        <div class="markdown-body">
          <h1>
<a id="user-content-a-next-generation-smart-contract-and-decentralized-application-platform" class="anchor" href="#a-next-generation-smart-contract-and-decentralized-application-platform" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>A Next-Generation Smart Contract and Decentralized Application Platform</h1>
<p><a href="https://gitter.im/ethereum/documentation" rel="nofollow"><img src="https://camo.githubusercontent.com/9f126db5efddc1c63d5fc50025b1e3a600da4a22/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6769747465722d446f6373253230636861742d3441423439352e7376673f73616e6974697a653d74727565" alt="Documentation chat" data-canonical-src="https://img.shields.io/badge/gitter-Docs%20chat-4AB495.svg?sanitize=true"></a></p>
<blockquote>
<p>An introductory paper to Ethereum, introduced before launch, which is maintained.</p>
</blockquote>
<p>Satoshi Nakamoto's development of Bitcoin in 2009 has often been hailed
as a radical development in money and currency, being the first example
of a digital asset which simultaneously has no backing or <a href="http://bitcoinmagazine.com/8640/an-exploration-of-intrinsic-value-what-it-is-why-bitcoin-doesnt-have-it-and-why-bitcoin-does-have-it/" rel="nofollow">intrinsic
value</a>
and no centralized issuer or controller. However, another - arguably
more important - part of the Bitcoin experiment is the underlying
blockchain technology as a tool of distributed consensus, and attention
is rapidly starting to shift to this other aspect of Bitcoin. Commonly
cited alternative applications of blockchain technology include using
on-blockchain digital assets to represent custom currencies and
financial instruments (<a href="https://docs.google.com/a/buterin.com/document/d/1AnkP_cVZTCMLIzw4DvsW6M8Q2JC0lIzrTLuoWu2z1BE/edit" rel="nofollow">colored
coins</a>),
the ownership of an underlying physical device (<a href="https://en.bitcoin.it/wiki/Smart_Property" rel="nofollow">smart
property</a>), non-fungible
assets such as domain names (<a href="http://namecoin.org" rel="nofollow">Namecoin</a>), as well
as more complex applications involving having digital assets being
directly controlled by a piece of code implementing arbitrary rules
(<a href="http://www.fon.hum.uva.nl/rob/Courses/InformationInSpeech/CDROM/Literature/LOTwinterschool2006/szabo.best.vwh.net/idea.html" rel="nofollow">smart
contracts</a>)
or even blockchain-based <a href="http://bitcoinmagazine.com/7050/bootstrapping-a-decentralized-autonomous-corporation-part-i/" rel="nofollow">decentralized autonomous
organizations</a>
(DAOs). What Ethereum intends to provide is a blockchain with a built-in
fully fledged Turing-complete programming language that can be used to
create "contracts" that can be used to encode arbitrary state transition
functions, allowing users to create any of the systems described above,
as well as many others that we have not yet imagined, simply by writing
up the logic in a few lines of code.</p>


<p><strong>Contents</strong></p>
<ul>
<li><a href="#introduction-to-bitcoin-and-existing-concepts">Introduction to Bitcoin and Existing
Concepts</a></li>
<li><a href="#history">History</a></li>
<li><a href="#bitcoin-as-a-state-transition-system">Bitcoin As A State Transition
System</a></li>
<li><a href="#mining">Mining</a></li>
<li><a href="#merkle-trees">Merkle Trees</a></li>
<li><a href="#alternative-blockchain-applications">Alternative Blockchain
Applications</a></li>
<li><a href="#scripting">Scripting</a></li>
<li><a href="#ethereum">Ethereum</a></li>
<li><a href="#philosophy">Philosophy</a></li>
<li><a href="#ethereum-accounts">Ethereum Accounts</a></li>
<li><a href="#messages-and-transactions">Messages and Transactions</a></li>
<li><a href="#messages">Messages</a></li>
<li><a href="#ethereum-state-transition-function">Ethereum State Transition
Function</a></li>
<li><a href="#code-execution">Code Execution</a></li>
<li><a href="#blockchain-and-mining">Blockchain and Mining</a></li>
<li><a href="#applications">Applications</a></li>
<li><a href="#token-systems">Token Systems</a></li>
<li><a href="#financial-derivatives-and-stable-value-currencies">Financial derivatives and Stable-Value
Currencies</a></li>
<li><a href="#identity-and-reputation-systems">Identity and Reputation Systems</a></li>
<li><a href="#decentralized-file-storage">Decentralized File Storage</a></li>
<li><a href="#decentralized-autonomous-organizations">Decentralized Autonomous
Organizations</a></li>
<li><a href="#further-applications">Further Applications</a></li>
<li><a href="#miscellanea-and-concerns">Miscellanea And Concerns</a></li>
<li><a href="#modified-ghost-implementation">Modified GHOST Implementation</a></li>
<li><a href="#fees">Fees</a></li>
<li><a href="#computation-and-turing-completeness">Computation And
Turing-Completeness</a></li>
<li><a href="#currency-and-issuance">Currency And Issuance</a></li>
<li><a href="#mining-centralization">Mining Centralization</a></li>
<li><a href="#scalability">Scalability</a></li>
<li><a href="#conclusion">Conclusion</a></li>
<li><a href="#notes-and-further-reading">Notes and Further Reading</a></li>
<li><a href="#notes">Notes</a></li>
<li><a href="#further-reading">Further Reading</a></li>
</ul>

<h1>
<a id="user-content-introduction-to-bitcoin-and-existing-concepts" class="anchor" href="#introduction-to-bitcoin-and-existing-concepts" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Introduction to Bitcoin and Existing Concepts</h1>
<h2>
<a id="user-content-history" class="anchor" href="#history" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>History</h2>
<p>The concept of decentralized digital currency, as well as alternative
applications like property registries, has been around for decades. The
anonymous e-cash protocols of the 1980s and the 1990s, mostly reliant on
a cryptographic primitive known as Chaumian blinding, provided a
currency with a high degree of privacy, but the protocols largely failed
to gain traction because of their reliance on a centralized
intermediary. In 1998, Wei Dai's
<a href="http://www.weidai.com/bmoney.txt" rel="nofollow">b-money</a> became the first proposal to
introduce the idea of creating money through solving computational
puzzles as well as decentralized consensus, but the proposal was scant
on details as to how decentralized consensus could actually be
implemented. In 2005, Hal Finney introduced a concept of <a href="http://nakamotoinstitute.org/finney/rpow/" rel="nofollow">reusable
proofs of work</a>, a system
which uses ideas from b-money together with Adam Back's computationally
difficult Hashcash puzzles to create a concept for a cryptocurrency, but
once again fell short of the ideal by relying on trusted computing as a
backend. In 2009, a decentralized currency was for the first time
implemented in practice by Satoshi Nakamoto, combining established
primitives for managing ownership through public key cryptography with a
consensus algorithm for keeping track of who owns coins, known as "proof
of work".</p>
<p>The mechanism behind proof of work was a breakthrough in the space
because it simultaneously solved two problems. First, it provided a
simple and moderately effective consensus algorithm, allowing nodes in
the network to collectively agree on a set of canonical updates to the
state of the Bitcoin ledger. Second, it provided a mechanism for
allowing free entry into the consensus process, solving the political
problem of deciding who gets to influence the consensus, while
simultaneously preventing sybil attacks. It does this by substituting a
formal barrier to participation, such as the requirement to be
registered as a unique entity on a particular list, with an economic
barrier - the weight of a single node in the consensus voting process is
directly proportional to the computing power that the node brings. Since
then, an alternative approach has been proposed called <em>proof of stake</em>,
calculating the weight of a node as being proportional to its currency
holdings and not computational resources; the discussion of the relative
merits of the two approaches is beyond the scope of this paper but it
should be noted that both approaches can be used to serve as the
backbone of a cryptocurrency.</p>
<p>Here is a blog post from Vitalik Buterin, the founder of Ethereum, on
<a href="https://vitalik.ca/2017-09-15-prehistory.html" rel="nofollow">Ethereum pre-history</a>.
<a href="https://blog.ethereum.org/2016/02/09/cut-and-try-building-a-dream/" rel="nofollow">Here</a>
is another blog post with more history.</p>
<h2>
<a id="user-content-bitcoin-as-a-state-transition-system" class="anchor" href="#bitcoin-as-a-state-transition-system" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Bitcoin As A State Transition System</h2>
<p><img src="https://raw.githubusercontent.com/ethereumbuilders/GitBook/master/en/vitalik-diagrams/statetransition.png" alt="statetransition.png"></p>
<p>From a technical standpoint, the ledger of a cryptocurrency such as
Bitcoin can be thought of as a state transition system, where there is a
"state" consisting of the ownership status of all existing bitcoins and
a "state transition function" that takes a state and a transaction and
outputs a new state which is the result. In a standard banking system,
for example, the state is a balance sheet, a transaction is a request to
move $X from A to B, and the state transition function reduces the
value in A's account by $X and increases the value in B's account by
$X. If A's account has less than $X in the first place, the state
transition function returns an error. Hence, one can formally define:</p>
<pre><code>APPLY(S,TX) -&gt; S' or ERROR
</code></pre>
<p>In the banking system defined above:</p>
<pre><code>APPLY({ Alice: $50, Bob: $50 },"send $20 from Alice to Bob") = { Alice: $30, Bob: $70 }
</code></pre>
<p>But:</p>
<pre><code>APPLY({ Alice: $50, Bob: $50 },"send $70 from Alice to Bob") = ERROR
</code></pre>
<p>The "state" in Bitcoin is the collection of all coins (technically,
"unspent transaction outputs" or UTXO) that have been mined and not yet
spent, with each UTXO having a denomination and an owner (defined by a
20-byte address which is essentially a cryptographic public key<sup><a href="https://github.com/ethereum/wiki/wiki/White-Paper#notes">fn.
1</a></sup>). A
transaction contains one or more inputs, with each input containing a
reference to an existing UTXO and a cryptographic signature produced by
the private key associated with the owner's address, and one or more
outputs, with each output containing a new UTXO to be added to the
state.</p>
<p>The state transition function <code>APPLY(S,TX) -&gt; S'</code> can be defined roughly
as follows:</p>
<ol>
<li>
<p>For each input in <code>TX</code>:</p>
<ul>
<li>If the referenced UTXO is not in <code>S</code>, return an error.</li>
<li>If the provided signature does not match the owner of the UTXO,
return an error.</li>
</ul>
</li>
<li>
<p>If the sum of the denominations of all input UTXO is less than the
sum of the denominations of all output UTXO, return an error.</p>
</li>
<li>
<p>Return <code>S'</code> with all input UTXO removed and all output UTXO added.</p>
</li>
</ol>
<p>The first half of the first step prevents transaction senders from
spending coins that do not exist, the second half of the first step
prevents transaction senders from spending other people's coins, and the
second step enforces conservation of value. In order to use this for
payment, the protocol is as follows. Suppose Alice wants to send 11.7
BTC to Bob. First, Alice will look for a set of available UTXO that she
owns that totals up to at least 11.7 BTC. Realistically, Alice will not
be able to get exactly 11.7 BTC; say that the smallest she can get is
6+4+2=12. She then creates a transaction with those three inputs and two
outputs. The first output will be 11.7 BTC with Bob's address as its
owner, and the second output will be the remaining 0.3 BTC "change",
with the owner being Alice herself.</p>
<h2>
<a id="user-content-mining" class="anchor" href="#mining" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Mining</h2>
<p><img src="https://raw.githubusercontent.com/ethereumbuilders/GitBook/master/en/vitalik-diagrams/block.png" alt="block_picture.jpg"></p>
<p>If we had access to a trustworthy centralized service, this system would
be trivial to implement; it could simply be coded exactly as described,
using a centralized server's hard drive to keep track of the state.
However, with Bitcoin we are trying to build a decentralized currency
system, so we will need to combine the state transition system with a
consensus system in order to ensure that everyone agrees on the order of
transactions. Bitcoin's decentralized consensus process requires nodes
in the network to continuously attempt to produce packages of
transactions called "blocks". The network is intended to produce roughly
one block every ten minutes, with each block containing a timestamp, a
nonce, a reference to (ie. hash of) the previous block and a list of all
of the transactions that have taken place since the previous block. Over
time, this creates a persistent, ever-growing, "blockchain" that
constantly updates to represent the latest state of the Bitcoin ledger.</p>
<p>The algorithm for checking if a block is valid, expressed in this
paradigm, is as follows:</p>
<ol>
<li>Check if the previous block referenced by the block exists and is
valid.</li>
<li>Check that the timestamp of the block is greater than that of the
previous block<sup><a href="https://github.com/ethereum/wiki/wiki/White-Paper#notes">fn.
2</a></sup>
and less than 2 hours into the future</li>
<li>Check that the proof of work on the block is valid.</li>
<li>Let <code>S[0]</code> be the state at the end of the previous block.</li>
<li>Suppose <code>TX</code> is the block's transaction list with <code>n</code> transactions.
For all <code>i</code> in <code>0...n-1</code>, set <code>S[i+1] = APPLY(S[i],TX[i])</code> If any
application returns an error, exit and return false.</li>
<li>Return true, and register <code>S[n]</code> as the state at the end of this
block.</li>
</ol>
<p>Essentially, each transaction in the block must provide a valid state
transition from what was the canonical state before the transaction was
executed to some new state. Note that the state is not encoded in the
block in any way; it is purely an abstraction to be remembered by the
validating node and can only be (securely) computed for any block by
starting from the genesis state and sequentially applying every
transaction in every block. Additionally, note that the order in which
the miner includes transactions into the block matters; if there are two
transactions A and B in a block such that B spends a UTXO created by A,
then the block will be valid if A comes before B but not otherwise.</p>
<p>The one validity condition present in the above list that is not found
in other systems is the requirement for "proof of work". The precise
condition is that the double-SHA256 hash of every block, treated as a
256-bit number, must be less than a dynamically adjusted target, which
as of the time of this writing is approximately 2<sup>187</sup>. The
purpose of this is to make block creation computationally "hard",
thereby preventing sybil attackers from remaking the entire blockchain
in their favor. Because SHA256 is designed to be a completely
unpredictable pseudorandom function, the only way to create a valid
block is simply trial and error, repeatedly incrementing the nonce and
seeing if the new hash matches.</p>
<p>At the current target of ~2<sup>187</sup>, the network must make an
average of ~2<sup>69</sup> tries before a valid block is found; in
general, the target is recalibrated by the network every 2016 blocks so
that on average a new block is produced by some node in the network
every ten minutes. In order to compensate miners for this computational
work, the miner of every block is entitled to include a transaction
giving themselves 12.5 BTC out of nowhere. Additionally, if any
transaction has a higher total denomination in its inputs than in its
outputs, the difference also goes to the miner as a "transaction fee".
Incidentally, this is also the only mechanism by which BTC are issued;
the genesis state contained no coins at all.</p>
<p>In order to better understand the purpose of mining, let us examine what
happens in the event of a malicious attacker. Since Bitcoin's underlying
cryptography is known to be secure, the attacker will target the one
part of the Bitcoin system that is not protected by cryptography
directly: the order of transactions. The attacker's strategy is simple:</p>
<ol>
<li>Send 100 BTC to a merchant in exchange for some product (preferably
a rapid-delivery digital good)</li>
<li>Wait for the delivery of the product</li>
<li>Produce another transaction sending the same 100 BTC to himself</li>
<li>Try to convince the network that his transaction to himself was the
one that came first.</li>
</ol>
<p>Once step (1) has taken place, after a few minutes some miner will
include the transaction in a block, say block number 270. After about
one hour, five more blocks will have been added to the chain after that
block, with each of those blocks indirectly pointing to the transaction
and thus "confirming" it. At this point, the merchant will accept the
payment as finalized and deliver the product; since we are assuming this
is a digital good, delivery is instant. Now, the attacker creates
another transaction sending the 100 BTC to himself. If the attacker
simply releases it into the wild, the transaction will not be processed;
miners will attempt to run <code>APPLY(S,TX)</code> and notice that <code>TX</code> consumes a
UTXO which is no longer in the state. So instead, the attacker creates a
"fork" of the blockchain, starting by mining another version of block
270 pointing to the same block 269 as a parent but with the new
transaction in place of the old one. Because the block data is
different, this requires redoing the proof of work. Furthermore, the
attacker's new version of block 270 has a different hash, so the
original blocks 271 to 275 do not "point" to it; thus, the original
chain and the attacker's new chain are completely separate. The rule is
that in a fork the longest blockchain is taken to be the truth, and so
legitimate miners will work on the 275 chain while the attacker alone is
working on the 270 chain. In order for the attacker to make his
blockchain the longest, he would need to have more computational power
than the rest of the network combined in order to catch up (hence, "51%
attack").</p>
<h2>
<a id="user-content-merkle-trees" class="anchor" href="#merkle-trees" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Merkle Trees</h2>
<p><img src="https://raw.githubusercontent.com/ethereum/www/master-postsale/src/extras/gh_wiki/spv_bitcoin.png" alt="SPV in bitcoin"></p>
<p><em>Left: it suffices to present only a small number of nodes in a Merkle
tree to give a proof of the validity of a branch.</em></p>
<p><em>Right: any attempt to change any part of the Merkle tree will
eventually lead to an inconsistency somewhere up the chain.</em></p>
<p>An important scalability feature of Bitcoin is that the block is stored
in a multi-level data structure. The "hash" of a block is actually only
the hash of the block header, a roughly 200-byte piece of data that
contains the timestamp, nonce, previous block hash and the root hash of
a data structure called the Merkle tree storing all transactions in the
block. A Merkle tree is a type of binary tree, composed of a set of
nodes with a large number of leaf nodes at the bottom of the tree
containing the underlying data, a set of intermediate nodes where each
node is the hash of its two children, and finally a single root node,
also formed from the hash of its two children, representing the "top" of
the tree. The purpose of the Merkle tree is to allow the data in a block
to be delivered piecemeal: a node can download only the header of a
block from one source, the small part of the tree relevant to them from
another source, and still be assured that all of the data is correct.
The reason why this works is that hashes propagate upward: if a
malicious user attempts to swap in a fake transaction into the bottom of
a Merkle tree, this change will cause a change in the node above, and
then a change in the node above that, finally changing the root of the
tree and therefore the hash of the block, causing the protocol to
register it as a completely different block (almost certainly with an
invalid proof of work).</p>
<p>The Merkle tree protocol is arguably essential to long-term
sustainability. A "full node" in the Bitcoin network, one that stores
and processes the entirety of every block, takes up about 15 GB of disk
space in the Bitcoin network as of April 2014, and is growing by over a
gigabyte per month. Currently, this is viable for some desktop computers
and not phones, and later on in the future only businesses and hobbyists
will be able to participate. A protocol known as "simplified payment
verification" (SPV) allows for another class of nodes to exist, called
"light nodes", which download the block headers, verify the proof of
work on the block headers, and then download only the "branches"
associated with transactions that are relevant to them. This allows
light nodes to determine with a strong guarantee of security what the
status of any Bitcoin transaction, and their current balance, is while
downloading only a very small portion of the entire blockchain.</p>
<h2>
<a id="user-content-alternative-blockchain-applications" class="anchor" href="#alternative-blockchain-applications" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Alternative Blockchain Applications</h2>
<p>The idea of taking the underlying blockchain idea and applying it to
other concepts also has a long history. In 1998, Nick Szabo came out
with the concept of <a href="http://nakamotoinstitute.org/secure-property-titles/" rel="nofollow">secure property titles with owner
authority</a>, a
document describing how "new advances in replicated database technology"
will allow for a blockchain-based system for storing a registry of who
owns what land, creating an elaborate framework including concepts such
as homesteading, adverse possession and Georgian land tax. However,
there was unfortunately no effective replicated database system
available at the time, and so the protocol was never implemented in
practice. After 2009, however, once Bitcoin's decentralized consensus
was developed a number of alternative applications rapidly began to
emerge.</p>
<ul>
<li>
<strong>Namecoin</strong> - created in 2010, <a href="https://namecoin.org/" rel="nofollow">Namecoin</a> is
best described as a decentralized name registration database. In
decentralized protocols like Tor, Bitcoin and BitMessage, there
needs to be some way of identifying accounts so that other people
can interact with them, but in all existing solutions the only kind
of identifier available is a pseudorandom hash like
<code>1LW79wp5ZBqaHW1jL5TCiBCrhQYtHagUWy</code>. Ideally, one would like to be
able to have an account with a name like "george". However, the
problem is that if one person can create an account named "george"
then someone else can use the same process to register "george" for
themselves as well and impersonate them. The only solution is a
first-to-file paradigm, where the first registerer succeeds and the
second fails - a problem perfectly suited for the Bitcoin consensus
protocol. Namecoin is the oldest, and most successful,
implementation of a name registration system using such an idea.</li>
<li>
<strong>Colored coins</strong> - the purpose of <a href="https://docs.google.com/a/buterin.com/document/d/1AnkP_cVZTCMLIzw4DvsW6M8Q2JC0lIzrTLuoWu2z1BE/edit" rel="nofollow">colored
coins</a>
is to serve as a protocol to allow people to create their own
digital currencies - or, in the important trivial case of a currency
with one unit, digital tokens, on the Bitcoin blockchain. In the
colored coins protocol, one "issues" a new currency by publicly
assigning a color to a specific Bitcoin UTXO, and the protocol
recursively defines the color of other UTXO to be the same as the
color of the inputs that the transaction creating them spent (some
special rules apply in the case of mixed-color inputs). This allows
users to maintain wallets containing only UTXO of a specific color
and send them around much like regular bitcoins, backtracking
through the blockchain to determine the color of any UTXO that they
receive.</li>
<li>
<strong>Metacoins</strong> - the idea behind a metacoin is to have a protocol
that lives on top of Bitcoin, using Bitcoin transactions to store
metacoin transactions but having a different state transition
function, <code>APPLY'</code>. Because the metacoin protocol cannot prevent
invalid metacoin transactions from appearing in the Bitcoin
blockchain, a rule is added that if <code>APPLY'(S,TX)</code> returns an error,
the protocol defaults to <code>APPLY'(S,TX) = S</code>. This provides an easy
mechanism for creating an arbitrary cryptocurrency protocol,
potentially with advanced features that cannot be implemented inside
of Bitcoin itself, but with a very low development cost since the
complexities of mining and networking are already handled by the
Bitcoin protocol. Metacoins have been used to implement some classes
of financial contracts, name registration and decentralized
exchange.</li>
</ul>
<p>Thus, in general, there are two approaches toward building a consensus
protocol: building an independent network, and building a protocol on
top of Bitcoin. The former approach, while reasonably successful in the
case of applications like Namecoin, is difficult to implement; each
individual implementation needs to bootstrap an independent blockchain,
as well as building and testing all of the necessary state transition
and networking code. Additionally, we predict that the set of
applications for decentralized consensus technology will follow a power
law distribution where the vast majority of applications would be too
small to warrant their own blockchain, and we note that there exist
large classes of decentralized applications, particularly decentralized
autonomous organizations, that need to interact with each other.</p>
<p>The Bitcoin-based approach, on the other hand, has the flaw that it does
not inherit the simplified payment verification features of Bitcoin. SPV
works for Bitcoin because it can use blockchain depth as a proxy for
validity; at some point, once the ancestors of a transaction go far
enough back, it is safe to say that they were legitimately part of the
state. Blockchain-based meta-protocols, on the other hand, cannot force
the blockchain not to include transactions that are not valid within the
context of their own protocols. Hence, a fully secure SPV meta-protocol
implementation would need to backward scan all the way to the beginning
of the Bitcoin blockchain to determine whether or not certain
transactions are valid. Currently, all "light" implementations of
Bitcoin-based meta-protocols rely on a trusted server to provide the
data, arguably a highly suboptimal result especially when one of the
primary purposes of a cryptocurrency is to eliminate the need for trust.</p>
<h2>
<a id="user-content-scripting" class="anchor" href="#scripting" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Scripting</h2>
<p>Even without any extensions, the Bitcoin protocol actually does
facilitate a weak version of a concept of "smart contracts". UTXO in
Bitcoin can be owned not just by a public key, but also by a more
complicated script expressed in a simple stack-based programming
language. In this paradigm, a transaction spending that UTXO must
provide data that satisfies the script. Indeed, even the basic public
key ownership mechanism is implemented via a script: the script takes an
elliptic curve signature as input, verifies it against the transaction
and the address that owns the UTXO, and returns 1 if the verification is
successful and 0 otherwise. Other, more complicated, scripts exist for
various additional use cases. For example, one can construct a script
that requires signatures from two out of a given three private keys to
validate ("multisig"), a setup useful for corporate accounts, secure
savings accounts and some merchant escrow situations. Scripts can also
be used to pay bounties for solutions to computational problems, and one
can even construct a script that says something like "this Bitcoin UTXO
is yours if you can provide an SPV proof that you sent a Dogecoin
transaction of this denomination to me", essentially allowing
decentralized cross-cryptocurrency exchange.</p>
<p>However, the scripting language as implemented in Bitcoin has several
important limitations:</p>
<ul>
<li>
<strong>Lack of Turing-completeness</strong> - that is to say, while there is a
large subset of computation that the Bitcoin scripting language
supports, it does not nearly support everything. The main category
that is missing is loops. This is done to avoid infinite loops
during transaction verification; theoretically it is a surmountable
obstacle for script programmers, since any loop can be simulated by
simply repeating the underlying code many times with an if
statement, but it does lead to scripts that are very
space-inefficient. For example, implementing an alternative elliptic
curve signature algorithm would likely require 256 repeated
multiplication rounds all individually included in the code.</li>
<li>
<strong>Value-blindness</strong> - there is no way for a UTXO script to provide
fine-grained control over the amount that can be withdrawn. For
example, one powerful use case of an oracle contract would be a
hedging contract, where A and B put in $1000 worth of BTC and after
30 days the script sends $1000 worth of BTC to A and the rest to B.
This would require an oracle to determine the value of 1 BTC in USD,
but even then it is a massive improvement in terms of trust and
infrastructure requirement over the fully centralized solutions that
are available now. However, because UTXO are all-or-nothing, the
only way to achieve this is through the very inefficient hack of
having many UTXO of varying denominations (eg. one UTXO of
2<sup>k</sup> for every k up to 30) and having O pick which UTXO to
send to A and which to B.</li>
<li>
<strong>Lack of state</strong> - a <a href="https://bitcoin.org/en/glossary/unspent-transaction-output" rel="nofollow">UTXO can either be spent or
unspent</a>;
there is no opportunity for multi-stage contracts or scripts which
keep any other internal state beyond that. This makes it hard to
make multi-stage options contracts, decentralized exchange offers or
two-stage cryptographic commitment protocols (necessary for secure
computational bounties). It also means that UTXO can only be used to
build simple, one-off contracts and not more complex "stateful"
contracts such as decentralized organizations, and makes
meta-protocols difficult to implement. Binary state combined with
value-blindness also mean that another important application,
withdrawal limits, is impossible.</li>
<li>
<strong>Blockchain-blindness</strong> - UTXO are blind to blockchain data such as
the nonce, the timestamp and previous block hash. This severely
limits applications in gambling, and several other categories, by
depriving the scripting language of a potentially valuable source of
randomness.</li>
</ul>
<p>Thus, we see three approaches to building advanced applications on top
of cryptocurrency: building a new blockchain, using scripting on top of
Bitcoin, and building a meta-protocol on top of Bitcoin. Building a new
blockchain allows for unlimited freedom in building a feature set, but
at the cost of development time, bootstrapping effort and security.
Using scripting is easy to implement and standardize, but is very
limited in its capabilities, and meta-protocols, while easy, suffer from
faults in scalability. With Ethereum, we intend to build an alternative
framework that provides even larger gains in ease of development as well
as even stronger light client properties, while at the same time
allowing applications to share an economic environment and blockchain
security.</p>
<h1>
<a id="user-content-ethereum" class="anchor" href="#ethereum" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Ethereum</h1>
<p>The intent of Ethereum is to create an alternative protocol for building
decentralized applications, providing a different set of tradeoffs that
we believe will be very useful for a large class of decentralized
applications, with particular emphasis on situations where rapid
development time, security for small and rarely used applications, and
the ability of different applications to very efficiently interact, are
important. Ethereum does this by building what is essentially the
ultimate abstract foundational layer: a blockchain with a built-in
Turing-complete programming language, allowing anyone to write smart
contracts and decentralized applications where they can create their own
arbitrary rules for ownership, transaction formats and state transition
functions. A bare-bones version of Namecoin can be written in two lines
of code, and other protocols like currencies and reputation systems can
be built in under twenty. Smart contracts, cryptographic "boxes" that
contain value and only unlock it if certain conditions are met, can also
be built on top of the platform, with vastly more power than that
offered by Bitcoin scripting because of the added powers of
Turing-completeness, value-awareness, blockchain-awareness and state.</p>
<h2>
<a id="user-content-philosophy" class="anchor" href="#philosophy" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Philosophy</h2>
<p>The design behind Ethereum is intended to follow the following
principles:</p>
<ol>
<li>
<strong>Simplicity</strong>: the Ethereum protocol should be as simple as
possible, even at the cost of some data storage or time
inefficiency.<sup><a href="https://github.com/ethereum/wiki/wiki/White-Paper#notes">fn.
3</a></sup> An
average programmer should ideally be able to follow and implement
the entire specification,<sup><a href="https://github.com/ethereum/wiki/wiki/White-Paper#notes">fn.
4</a></sup> so
as to fully realize the unprecedented democratizing potential that
cryptocurrency brings and further the vision of Ethereum as a
protocol that is open to all. Any optimization which adds complexity
should not be included unless that optimization provides very
substantial benefit.</li>
<li>
<strong>Universality</strong>: a fundamental part of Ethereum's design philosophy
is that Ethereum does not have "features".<sup><a href="https://github.com/ethereum/wiki/wiki/White-Paper#notes">fn.
5</a></sup>
Instead, Ethereum provides an internal Turing-complete scripting
language, which a programmer can use to construct any smart contract
or transaction type that can be mathematically defined. Want to
invent your own financial derivative? With Ethereum, you can. Want
to make your own currency? Set it up as an Ethereum contract. Want
to set up a full-scale Daemon or Skynet? You may need to have a few
thousand interlocking contracts, and be sure to feed them
generously, to do that, but nothing is stopping you with Ethereum at
your fingertips.</li>
<li>
<strong>Modularity</strong>: the parts of the Ethereum protocol should be
designed to be as modular and separable as possible. Over the course
of development, our goal is to create a program where if one was to
make a small protocol modification in one place, the application
stack would continue to function without any further modification.
Innovations such as Ethash (see the <a href="https://ethereum.github.io/yellowpaper/paper.pdf#appendix.J" rel="nofollow">Yellow Paper
Appendix</a>
or <a href="https://github.com/ethereum/wiki/wiki/Ethash">wiki article</a>),
modified Patricia trees (<a href="https://ethereum.github.io/yellowpaper/paper.pdf#appendix.D" rel="nofollow">Yellow
Paper</a>,
<a href="https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-Patricia-Tree">wiki</a>)
and RLP
(<a href="https://ethereum.github.io/yellowpaper/paper.pdf#appendix.B" rel="nofollow">YP</a>,
<a href="https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP">wiki</a>)
should be, and are, implemented as separate, feature-complete
libraries. This is so that even though they are used in Ethereum,
even if Ethereum does not require certain features, such features
are still usable in other protocols as well. Ethereum development
should be maximally done so as to benefit the entire cryptocurrency
ecosystem, not just itself.</li>
<li>
<strong>Agility</strong>: details of the Ethereum protocol are not set in stone.
Although we will be extremely judicious about making modifications
to high-level constructs, for instance with the <a href="https://ethresear.ch/t/sharding-phase-1-spec/1407/" rel="nofollow">sharding
roadmap</a>,
abstracting execution, with only data availability enshrined in
consensus. Computational tests later on in the development process
may lead us to discover that certain modifications, e.g. to the
protocol architecture or to the Ethereum Virtual Machine (EVM), will
substantially improve scalability or security. If any such
opportunities are found, we will exploit them.</li>
<li>
<strong>Non-discrimination</strong> and <strong>non-censorship</strong>: the protocol should
not attempt to actively restrict or prevent specific categories of
usage. All regulatory mechanisms in the protocol should be designed
to directly regulate the harm and not attempt to oppose specific
undesirable applications. A programmer can even run an infinite loop
script on top of Ethereum for as long as they are willing to keep
paying the per-computational-step transaction fee.</li>
</ol>
<h2>
<a id="user-content-ethereum-accounts" class="anchor" href="#ethereum-accounts" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Ethereum Accounts</h2>
<p>In Ethereum, the state is made up of objects called "accounts", with
each account having a 20-byte address and state transitions being direct
transfers of value and information between accounts. An Ethereum account
contains four fields:</p>
<ul>
<li>The <strong>nonce</strong>, a counter used to make sure each transaction can only
be processed once</li>
<li>The account's current <strong>ether balance</strong>
</li>
<li>The account's <strong>contract code</strong>, if present</li>
<li>The account's <strong>storage</strong> (empty by default)</li>
</ul>
<p>"Ether" is the main internal crypto-fuel of Ethereum, and is used to pay
transaction fees. In general, there are two types of accounts:
<strong>externally owned accounts</strong>, controlled by private keys, and
<strong>contract accounts</strong>, controlled by their contract code. An externally
owned account has no code, and one can send messages from an externally
owned account by creating and signing a transaction; in a contract
account, every time the contract account receives a message its code
activates, allowing it to read and write to internal storage and send
other messages or create contracts in turn.</p>
<p>Note that "contracts" in Ethereum should not be seen as something that
should be "fulfilled" or "complied with"; rather, they are more like
"autonomous agents" that live inside of the Ethereum execution
environment, always executing a specific piece of code when "poked" by a
message or transaction, and having direct control over their own ether
balance and their own key/value store to keep track of persistent
variables.</p>
<h2>
<a id="user-content-messages-and-transactions" class="anchor" href="#messages-and-transactions" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Messages and Transactions</h2>
<p>The term "transaction" is used in Ethereum to refer to the signed data
package that stores a message to be sent from an externally owned
account. Transactions contain:</p>
<ul>
<li>The recipient of the message</li>
<li>A signature identifying the sender</li>
<li>The amount of ether to transfer from the sender to the recipient</li>
<li>An optional data field</li>
<li>A <code>STARTGAS</code> value, representing the maximum number of computational
steps the transaction execution is allowed to take</li>
<li>A <code>GASPRICE</code> value, representing the fee the sender pays per
computational step</li>
</ul>
<p>The first three are standard fields expected in any cryptocurrency. The
data field has no function by default, but the virtual machine has an
opcode which a contract can use to access the data; as an example use
case, if a contract is functioning as an on-blockchain domain
registration service, then it may wish to interpret the data being
passed to it as containing two "fields", the first field being a domain
to register and the second field being the IP address to register it to.
The contract would read these values from the message data and
appropriately place them in storage.</p>
<p>The <code>STARTGAS</code> and <code>GASPRICE</code> fields are crucial for Ethereum's
anti-denial of service model. In order to prevent accidental or hostile
infinite loops or other computational wastage in code, each transaction
is required to set a limit to how many computational steps of code
execution it can use. The fundamental unit of computation is "gas";
usually, a computational step costs 1 gas, but some operations cost
higher amounts of gas because they are more computationally expensive,
or increase the amount of data that must be stored as part of the state.
There is also a fee of 5 gas for every byte in the transaction data. The
intent of the fee system is to require an attacker to pay
proportionately for every resource that they consume, including
computation, bandwidth and storage; hence, any transaction that leads to
the network consuming a greater amount of any of these resources must
have a gas fee roughly proportional to the increment.</p>
<h2>
<a id="user-content-messages" class="anchor" href="#messages" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Messages</h2>
<p>Contracts have the ability to send "messages" to other contracts.
Messages are virtual objects that are never serialized and exist only in
the Ethereum execution environment. A message contains:</p>
<ul>
<li>The sender of the message (implicit)</li>
<li>The recipient of the message</li>
<li>The amount of ether to transfer alongside the message</li>
<li>An optional data field</li>
<li>A <code>STARTGAS</code> value</li>
</ul>
<p>Essentially, a message is like a transaction, except it is produced by a
contract and not an external actor. A message is produced when a
contract currently executing code executes the <code>CALL</code> opcode, which
produces and executes a message. Like a transaction, a message leads to
the recipient account running its code. Thus, contracts can have
relationships with other contracts in exactly the same way that external
actors can.</p>
<p>Note that the gas allowance assigned by a transaction or contract
applies to the total gas consumed by that transaction and all
sub-executions. For example, if an external actor A sends a transaction
to B with 1000 gas, and B consumes 600 gas before sending a message to
C, and the internal execution of C consumes 300 gas before returning,
then B can spend another 100 gas before running out of gas.</p>
<h2>
<a id="user-content-ethereum-state-transition-function" class="anchor" href="#ethereum-state-transition-function" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Ethereum State Transition Function</h2>
<p><img src="https://raw.githubusercontent.com/ethereumbuilders/GitBook/master/en/vitalik-diagrams/ethertransition.png" alt="ethertransition.png"></p>
<p>The Ethereum state transition function, <code>APPLY(S,TX) -&gt; S'</code> can be
defined as follows:</p>
<ol>
<li>Check if the transaction is well-formed (ie. has the right number of
values), the signature is valid, and the nonce matches the nonce in
the sender's account. If not, return an error.</li>
<li>Calculate the transaction fee as <code>STARTGAS * GASPRICE</code>, and
determine the sending address from the signature. Subtract the fee
from the sender's account balance and increment the sender's nonce.
If there is not enough balance to spend, return an error.</li>
<li>Initialize <code>GAS = STARTGAS</code>, and take off a certain quantity of gas
per byte to pay for the bytes in the transaction.</li>
<li>Transfer the transaction value from the sender's account to the
receiving account. If the receiving account does not yet exist,
create it. If the receiving account is a contract, run the
contract's code either to completion or until the execution runs out
of gas.</li>
<li>If the value transfer failed because the sender did not have enough
money, or the code execution ran out of gas, revert all state
changes except the payment of the fees, and add the fees to the
miner's account.</li>
<li>Otherwise, refund the fees for all remaining gas to the sender, and
send the fees paid for gas consumed to the miner.</li>
</ol>
<p>For example, suppose that the contract's code is:</p>
<pre><code>if !self.storage[calldataload(0)]:
    self.storage[calldataload(0)] = calldataload(32)
</code></pre>
<p>Note that in reality the contract code is written in the low-level EVM
code; this example is written in Serpent, one of our high-level
languages, for clarity, and can be compiled down to EVM code. Suppose
that the contract's storage starts off empty, and a transaction is sent
with 10 ether value, 2000 gas, 0.001 ether gasprice, and 64 bytes of
data, with bytes 0-31 representing the number <code>2</code> and bytes 32-63
representing the string <code>CHARLIE</code>.<sup><a href="https://github.com/ethereum/wiki/wiki/White-Paper#notes">fn.
6</a></sup> The
process for the state transition function in this case is as follows:</p>
<ol>
<li>Check that the transaction is valid and well formed.</li>
<li>Check that the transaction sender has at least 2000 * 0.001 = 2
ether. If it is, then subtract 2 ether from the sender's account.</li>
<li>Initialize gas = 2000; assuming the transaction is 170 bytes long
and the byte-fee is 5, subtract 850 so that there is 1150 gas left.</li>
<li>Subtract 10 more ether from the sender's account, and add it to the
contract's account.</li>
<li>Run the code. In this case, this is simple: it checks if the
contract's storage at index <code>2</code> is used, notices that it is not, and
so it sets the storage at index <code>2</code> to the value <code>CHARLIE</code>. Suppose
this takes 187 gas, so the remaining amount of gas is 1150 - 187 =
963</li>
<li>Add 963 * 0.001 = 0.963 ether back to the sender's account, and
return the resulting state.</li>
</ol>
<p>If there was no contract at the receiving end of the transaction, then
the total transaction fee would simply be equal to the provided
<code>GASPRICE</code> multiplied by the length of the transaction in bytes, and the
data sent alongside the transaction would be irrelevant.</p>
<p>Note that messages work equivalently to transactions in terms of
reverts: if a message execution runs out of gas, then that message's
execution, and all other executions triggered by that execution, revert,
but parent executions do not need to revert. This means that it is
"safe" for a contract to call another contract, as if A calls B with G
gas then A's execution is guaranteed to lose at most G gas. Finally,
note that there is an opcode, <code>CREATE</code>, that creates a contract; its
execution mechanics are generally similar to <code>CALL</code>, with the exception
that the output of the execution determines the code of a newly created
contract.</p>
<h2>
<a id="user-content-code-execution" class="anchor" href="#code-execution" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Code Execution</h2>
<p>The code in Ethereum contracts is written in a low-level, stack-based
bytecode language, referred to as "Ethereum virtual machine code" or
"EVM code". The code consists of a series of bytes, where each byte
represents an operation. In general, code execution is an infinite loop
that consists of repeatedly carrying out the operation at the current
program counter (which begins at zero) and then incrementing the program
counter by one, until the end of the code is reached or an error or
<code>STOP</code> or <code>RETURN</code> instruction is detected. The operations have access
to three types of space in which to store data:</p>
<ul>
<li>The <strong>stack</strong>, a last-in-first-out container to which values can be
pushed and popped</li>
<li>
<strong>Memory</strong>, an infinitely expandable byte array</li>
<li>The contract's long-term <strong>storage</strong>, a key/value store. Unlike
stack and memory, which reset after computation ends, storage
persists for the long term.</li>
</ul>
<p>The code can also access the value, sender and data of the incoming
message, as well as block header data, and the code can also return a
byte array of data as an output.</p>
<p>The formal execution model of EVM code is surprisingly simple. While the
Ethereum virtual machine is running, its full computational state can be
defined by the tuple
<code>(block_state, transaction, message, code, memory, stack, pc, gas)</code>,
where <code>block_state</code> is the global state containing all accounts and
includes balances and storage. At the start of every round of execution,
the current instruction is found by taking the <code>pc</code>-th byte of <code>code</code>
(or 0 if <code>pc &gt;= len(code)</code>), and each instruction has its own definition
in terms of how it affects the tuple. For example, <code>ADD</code> pops two items
off the stack and pushes their sum, reduces <code>gas</code> by 1 and increments
<code>pc</code> by 1, and <code>SSTORE</code> pops the top two items off the stack and inserts
the second item into the contract's storage at the index specified by
the first item. Although there are many ways to optimize Ethereum
virtual machine execution via just-in-time compilation, a basic
implementation of Ethereum can be done in a few hundred lines of code.</p>
<h2>
<a id="user-content-blockchain-and-mining" class="anchor" href="#blockchain-and-mining" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Blockchain and Mining</h2>
<p><img src="https://raw.githubusercontent.com/ethereumbuilders/GitBook/master/en/vitalik-diagrams/apply_block_diagram.png" alt="apply_block_diagram.png"></p>
<p>The Ethereum blockchain is in many ways similar to the Bitcoin
blockchain, although it does have some differences. The main difference
between Ethereum and Bitcoin with regard to the blockchain architecture
is that, unlike Bitcoin(which only contains a copy of the transaction
list), Ethereum blocks contain a copy of both the transaction list and
the most recent state. Aside from that, two other values, the block
number and the difficulty, are also stored in the block. The basic block
validation algorithm in Ethereum is as follows:</p>
<ol>
<li>Check if the previous block referenced exists and is valid.</li>
<li>Check that the timestamp of the block is greater than that of the
referenced previous block and less than 15 minutes into the future</li>
<li>Check that the block number, difficulty, transaction root, uncle
root and gas limit (various low-level Ethereum-specific concepts)
are valid.</li>
<li>Check that the proof of work on the block is valid.</li>
<li>Let <code>S[0]</code> be the state at the end of the previous block.</li>
<li>Let <code>TX</code> be the block's transaction list, with <code>n</code> transactions. For
all <code>i</code> in <code>0...n-1</code>, set <code>S[i+1] = APPLY(S[i],TX[i])</code>. If any
application returns an error, or if the total gas consumed in the
block up until this point exceeds the <code>GASLIMIT</code>, return an error.</li>
<li>Let <code>S_FINAL</code> be <code>S[n]</code>, but adding the block reward paid to the
miner.</li>
<li>Check if the Merkle tree root of the state <code>S_FINAL</code> is equal to the
final state root provided in the block header. If it is, the block
is valid; otherwise, it is not valid.</li>
</ol>
<p>The approach may seem highly inefficient at first glance, because it
needs to store the entire state with each block, but in reality
efficiency should be comparable to that of Bitcoin. The reason is that
the state is stored in the tree structure, and after every block only a
small part of the tree needs to be changed. Thus, in general, between
two adjacent blocks the vast majority of the tree should be the same,
and therefore the data can be stored once and referenced twice using
pointers (ie. hashes of subtrees). A special kind of tree known as a
"Patricia tree" is used to accomplish this, including a modification to
the Merkle tree concept that allows for nodes to be inserted and
deleted, and not just changed, efficiently. Additionally, because all of
the state information is part of the last block, there is no need to
store the entire blockchain history - a strategy which, if it could be
applied to Bitcoin, can be calculated to provide 5-20x savings in space.</p>
<p>A commonly asked question is "where" contract code is executed, in terms
of physical hardware. This has a simple answer: the process of executing
contract code is part of the definition of the state transition
function, which is part of the block validation algorithm, so if a
transaction is added into block <code>B</code> the code execution spawned by that
transaction will be executed by all nodes, now and in the future, that
download and validate block <code>B</code>.</p>
<h1>
<a id="user-content-applications" class="anchor" href="#applications" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Applications</h1>
<p>In general, there are three types of applications on top of Ethereum.
The first category is financial applications, providing users with more
powerful ways of managing and entering into contracts using their money.
This includes sub-currencies, financial derivatives, hedging contracts,
savings wallets, wills, and ultimately even some classes of full-scale
employment contracts. The second category is semi-financial
applications, where money is involved but there is also a heavy
non-monetary side to what is being done; a perfect example is
self-enforcing bounties for solutions to computational problems.
Finally, there are applications such as online voting and decentralized
governance that are not financial at all.</p>
<h2>
<a id="user-content-token-systems" class="anchor" href="#token-systems" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Token Systems</h2>
<p>On-blockchain token systems have many applications ranging from
sub-currencies representing assets such as USD or gold to company
stocks, individual tokens representing smart property, secure
unforgeable coupons, and even token systems with no ties to conventional
value at all, used as point systems for incentivization. Token systems
are surprisingly easy to implement in Ethereum. The key point to
understand is that a currency, or token system, fundamentally is a
database with one operation: subtract X units from A and give X units to
B, with the provision that (1) A had at least X units before the
transaction and (2) the transaction is approved by A. All that it takes
to implement a token system is to implement this logic into a contract.</p>
<p>The basic code for implementing a token system in Serpent looks as
follows:</p>
<pre><code>def send(to, value):
    if self.storage[msg.sender] &gt;= value:
        self.storage[msg.sender] = self.storage[msg.sender] - value
        self.storage[to] = self.storage[to] + value
</code></pre>
<p>This is essentially a literal implementation of the "banking system"
state transition function described further above in this document. A
few extra lines of code need to be added to provide for the initial step
of distributing the currency units in the first place and a few other
edge cases, and ideally a function would be added to let other contracts
query for the balance of an address. But that's all there is to it.
Theoretically, Ethereum-based token systems acting as sub-currencies can
potentially include another important feature that on-chain
Bitcoin-based meta-currencies lack: the ability to pay transaction fees
directly in that currency. The way this would be implemented is that the
contract would maintain an ether balance with which it would refund
ether used to pay fees to the sender, and it would refill this balance
by collecting the internal currency units that it takes in fees and
reselling them in a constant running auction. Users would thus need to
"activate" their accounts with ether, but once the ether is there it
would be reusable because the contract would refund it each time.</p>
<h2>
<a id="user-content-financial-derivatives-and-stable-value-currencies" class="anchor" href="#financial-derivatives-and-stable-value-currencies" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Financial derivatives and Stable-Value Currencies</h2>
<p>Financial derivatives are the most common application of a "smart
contract", and one of the simplest to implement in code. The main
challenge in implementing financial contracts is that the majority of
them require reference to an external price ticker; for example, a very
desirable application is a smart contract that hedges against the
volatility of ether (or another cryptocurrency) with respect to the US
dollar, but doing this requires the contract to know what the value of
ETH/USD is. The simplest way to do this is through a "data feed"
contract maintained by a specific party (eg. NASDAQ) designed so that
that party has the ability to update the contract as needed, and
providing an interface that allows other contracts to send a message to
that contract and get back a response that provides the price.</p>
<p>Given that critical ingredient, the hedging contract would look as
follows:</p>
<ol>
<li>Wait for party A to input 1000 ether.</li>
<li>Wait for party B to input 1000 ether.</li>
<li>Record the USD value of 1000 ether, calculated by querying the data
feed contract, in storage, say this is $x.</li>
<li>After 30 days, allow A or B to "reactivate" the contract in order to
send $x worth of ether (calculated by querying the data feed
contract again to get the new price) to A and the rest to B.</li>
</ol>
<p>Such a contract would have significant potential in crypto-commerce. One
of the main problems cited about cryptocurrency is the fact that it's
volatile; although many users and merchants may want the security and
convenience of dealing with cryptographic assets, they may not wish to
face that prospect of losing 23% of the value of their funds in a single
day. Up until now, the most commonly proposed solution has been
issuer-backed assets; the idea is that an issuer creates a sub-currency
in which they have the right to issue and revoke units, and provide one
unit of the currency to anyone who provides them (offline) with one unit
of a specified underlying asset (eg. gold, USD). The issuer then
promises to provide one unit of the underlying asset to anyone who sends
back one unit of the crypto-asset. This mechanism allows any
non-cryptographic asset to be "uplifted" into a cryptographic asset,
provided that the issuer can be trusted.</p>
<p>In practice, however, issuers are not always trustworthy, and in some
cases the banking infrastructure is too weak, or too hostile, for such
services to exist. Financial derivatives provide an alternative. Here,
instead of a single issuer providing the funds to back up an asset, a
decentralized market of speculators, betting that the price of a
cryptographic reference asset (eg. ETH) will go up, plays that role.
Unlike issuers, speculators have no option to default on their side of
the bargain because the hedging contract holds their funds in escrow.
Note that this approach is not fully decentralized, because a trusted
source is still needed to provide the price ticker, although arguably
even still this is a massive improvement in terms of reducing
infrastructure requirements (unlike being an issuer, issuing a price
feed requires no licenses and can likely be categorized as free speech)
and reducing the potential for fraud.</p>
<h2>
<a id="user-content-identity-and-reputation-systems" class="anchor" href="#identity-and-reputation-systems" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Identity and Reputation Systems</h2>
<p>The earliest alternative cryptocurrency of all,
<a href="http://namecoin.org/" rel="nofollow">Namecoin</a>, attempted to use a Bitcoin-like
blockchain to provide a name registration system, where users can
register their names in a public database alongside other data. The
major cited use case is for a
<a href="http://en.wikipedia.org/wiki/Domain_Name_System" rel="nofollow">DNS</a> system, mapping
domain names like "bitcoin.org" (or, in Namecoin's case, "bitcoin.bit")
to an IP address. Other use cases include email authentication and
potentially more advanced reputation systems. Here is the basic contract
to provide a Namecoin-like name registration system on Ethereum:</p>
<pre><code>def register(name, value):
    if !self.storage[name]:
        self.storage[name] = value
</code></pre>
<p>The contract is very simple; all it is a database inside the Ethereum
network that can be added to, but not modified or removed from. Anyone
can register a name with some value, and that registration then sticks
forever. A more sophisticated name registration contract will also have
a "function clause" allowing other contracts to query it, as well as a
mechanism for the "owner" (ie. the first registerer) of a name to change
the data or transfer ownership. One can even add reputation and
web-of-trust functionality on top.</p>
<h2>
<a id="user-content-decentralized-file-storage" class="anchor" href="#decentralized-file-storage" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Decentralized File Storage</h2>
<p>Over the past few years, there have emerged a number of popular online
file storage startups, the most prominent being Dropbox, seeking to
allow users to upload a backup of their hard drive and have the service
store the backup and allow the user to access it in exchange for a
monthly fee. However, at this point the file storage market is at times
relatively inefficient; a cursory look at various <a href="http://online-storage-service-review.toptenreviews.com/" rel="nofollow">existing
solutions</a>
shows that, particularly at the "uncanny valley" 20-200 GB level at
which neither free quotas nor enterprise-level discounts kick in,
monthly prices for mainstream file storage costs are such that you are
paying for more than the cost of the entire hard drive in a single
month. Ethereum contracts can allow for the development of a
decentralized file storage ecosystem, where individual users can earn
small quantities of money by renting out their own hard drives and
unused space can be used to further drive down the costs of file
storage.</p>
<p>The key underpinning piece of such a device would be what we have termed
the "decentralized Dropbox contract". This contract works as follows.
First, one splits the desired data up into blocks, encrypting each block
for privacy, and builds a Merkle tree out of it. One then makes a
contract with the rule that, every N blocks, the contract would pick a
random index in the Merkle tree (using the previous block hash,
accessible from contract code, as a source of randomness), and give X
ether to the first entity to supply a transaction with a simplified
payment verification-like proof of ownership of the block at that
particular index in the tree. When a user wants to re-download their
file, they can use a micropayment channel protocol (eg. pay 1 szabo per
32 kilobytes) to recover the file; the most fee-efficient approach is
for the payer not to publish the transaction until the end, instead
replacing the transaction with a slightly more lucrative one with the
same nonce after every 32 kilobytes.</p>
<p>An important feature of the protocol is that, although it may seem like
one is trusting many random nodes not to decide to forget the file, one
can reduce that risk down to near-zero by splitting the file into many
pieces via secret sharing, and watching the contracts to see each piece
is still in some node's possession. If a contract is still paying out
money, that provides a cryptographic proof that someone out there is
still storing the file.</p>
<h2>
<a id="user-content-decentralized-autonomous-organizations" class="anchor" href="#decentralized-autonomous-organizations" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Decentralized Autonomous Organizations</h2>
<p>The general concept of a "decentralized autonomous organization" is that
of a virtual entity that has a certain set of members or shareholders
which, perhaps with a 67% majority, have the right to spend the entity's
funds and modify its code. The members would collectively decide on how
the organization should allocate its funds. Methods for allocating a
DAO's funds could range from bounties, salaries to even more exotic
mechanisms such as an internal currency to reward work. This essentially
replicates the legal trappings of a traditional company or nonprofit but
using only cryptographic blockchain technology for enforcement. So far
much of the talk around DAOs has been around the "capitalist" model of a
"decentralized autonomous corporation" (DAC) with dividend-receiving
shareholders and tradable shares; an alternative, perhaps described as a
"decentralized autonomous community", would have all members have an
equal share in the decision making and require 67% of existing members
to agree to add or remove a member. The requirement that one person can
only have one membership would then need to be enforced collectively by
the group.</p>
<p>A general outline for how to code a DAO is as follows. The simplest
design is simply a piece of self-modifying code that changes if two
thirds of members agree on a change. Although code is theoretically
immutable, one can easily get around this and have de-facto mutability
by having chunks of the code in separate contracts, and having the
address of which contracts to call stored in the modifiable storage. In
a simple implementation of such a DAO contract, there would be three
transaction types, distinguished by the data provided in the
transaction:</p>
<ul>
<li>
<code>[0,i,K,V]</code> to register a proposal with index <code>i</code> to change the
address at storage index <code>K</code> to value <code>V</code>
</li>
<li>
<code>[1,i]</code> to register a vote in favor of proposal <code>i</code>
</li>
<li>
<code>[2,i]</code> to finalize proposal <code>i</code> if enough votes have been made</li>
</ul>
<p>The contract would then have clauses for each of these. It would
maintain a record of all open storage changes, along with a list of who
voted for them. It would also have a list of all members. When any
storage change gets to two thirds of members voting for it, a finalizing
transaction could execute the change. A more sophisticated skeleton
would also have built-in voting ability for features like sending a
transaction, adding members and removing members, and may even provide
for <a href="http://en.wikipedia.org/wiki/Delegative_democracy" rel="nofollow">Liquid
Democracy</a>-style vote
delegation (ie. anyone can assign someone to vote for them, and
assignment is transitive so if A assigns B and B assigns C then C
determines A's vote). This design would allow the DAO to grow
organically as a decentralized community, allowing people to eventually
delegate the task of filtering out who is a member to specialists,
although unlike in the "current system" specialists can easily pop in
and out of existence over time as individual community members change
their alignments.</p>
<p>An alternative model is for a decentralized corporation, where any
account can have zero or more shares, and two thirds of the shares are
required to make a decision. A complete skeleton would involve asset
management functionality, the ability to make an offer to buy or sell
shares, and the ability to accept offers (preferably with an
order-matching mechanism inside the contract). Delegation would also
exist Liquid Democracy-style, generalizing the concept of a "board of
directors".</p>
<h2>
<a id="user-content-further-applications" class="anchor" href="#further-applications" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Further Applications</h2>
<p><strong>1. Savings wallets</strong>. Suppose that Alice wants to keep her funds safe,
but is worried that she will lose or someone will hack her private key.
She puts ether into a contract with Bob, a bank, as follows:</p>
<ul>
<li>Alice alone can withdraw a maximum of 1% of the funds per day.</li>
<li>Bob alone can withdraw a maximum of 1% of the funds per day, but
Alice has the ability to make a transaction with her key shutting
off this ability.</li>
<li>Alice and Bob together can withdraw anything.</li>
</ul>
<p>Normally, 1% per day is enough for Alice, and if Alice wants to withdraw
more she can contact Bob for help. If Alice's key gets hacked, she runs
to Bob to move the funds to a new contract. If she loses her key, Bob
will get the funds out eventually. If Bob turns out to be malicious,
then she can turn off his ability to withdraw.</p>
<p><strong>2. Crop insurance</strong>. One can easily make a financial derivatives
contract but using a data feed of the weather instead of any price
index. If a farmer in Iowa purchases a derivative that pays out
inversely based on the precipitation in Iowa, then if there is a
drought, the farmer will automatically receive money and if there is
enough rain the farmer will be happy because their crops would do well.
This can be expanded to natural disaster insurance generally.</p>
<p><strong>3. A decentralized data feed</strong>. For financial contracts for
difference, it may actually be possible to decentralize the data feed
via a protocol called
<a href="http://blog.ethereum.org/2014/03/28/schellingcoin-a-minimal-trust-universal-data-feed/" rel="nofollow">SchellingCoin</a>.
SchellingCoin basically works as follows: N parties all put into the
system the value of a given datum (eg. the ETH/USD price), the values
are sorted, and everyone between the 25th and 75th percentile gets one
token as a reward. Everyone has the incentive to provide the answer that
everyone else will provide, and the only value that a large number of
players can realistically agree on is the obvious default: the truth.
This creates a decentralized protocol that can theoretically provide any
number of values, including the ETH/USD price, the temperature in Berlin
or even the result of a particular hard computation.</p>
<p><strong>4. Smart multisignature escrow</strong>. Bitcoin allows multisignature
transaction contracts where, for example, three out of a given five keys
can spend the funds. Ethereum allows for more granularity; for example,
four out of five can spend everything, three out of five can spend up to
10% per day, and two out of five can spend up to 0.5% per day.
Additionally, Ethereum multisig is asynchronous - two parties can
register their signatures on the blockchain at different times and the
last signature will automatically send the transaction.</p>
<p><strong>5. Cloud computing</strong>. The EVM technology can also be used to create a
verifiable computing environment, allowing users to ask others to carry
out computations and then optionally ask for proofs that computations at
certain randomly selected checkpoints were done correctly. This allows
for the creation of a cloud computing market where any user can
participate with their desktop, laptop or specialized server, and
spot-checking together with security deposits can be used to ensure that
the system is trustworthy (ie. nodes cannot profitably cheat). Although
such a system may not be suitable for all tasks; tasks that require a
high level of inter-process communication, for example, cannot easily be
done on a large cloud of nodes. Other tasks, however, are much easier to
parallelize; projects like SETI@home, folding@home and genetic
algorithms can easily be implemented on top of such a platform.</p>
<p><strong>6. Peer-to-peer gambling</strong>. Any number of peer-to-peer gambling
protocols, such as Frank Stajano and Richard Clayton's
<a href="http://www.cl.cam.ac.uk/~fms27/papers/2008-StajanoCla-cyberdice.pdf" rel="nofollow">Cyberdice</a>,
can be implemented on the Ethereum blockchain. The simplest gambling
protocol is actually simply a contract for difference on the next block
hash, and more advanced protocols can be built up from there, creating
gambling services with near-zero fees that have no ability to cheat.</p>
<p><strong>7. Prediction markets</strong>. Provided an oracle or SchellingCoin,
prediction markets are also easy to implement, and prediction markets
together with SchellingCoin may prove to be the first mainstream
application of <a href="http://hanson.gmu.edu/futarchy.html" rel="nofollow">futarchy</a> as a
governance protocol for decentralized organizations.</p>
<p><strong>8. On-chain decentralized marketplaces</strong>, using the identity and
reputation system as a base.</p>
<h1>
<a id="user-content-miscellanea-and-concerns" class="anchor" href="#miscellanea-and-concerns" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Miscellanea And Concerns</h1>
<h2>
<a id="user-content-modified-ghost-implementation" class="anchor" href="#modified-ghost-implementation" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Modified GHOST Implementation</h2>
<p>The "Greedy Heaviest Observed Subtree" (GHOST) protocol is an innovation
first introduced by Yonatan Sompolinsky and Aviv Zohar in <a href="https://eprint.iacr.org/2013/881.pdf" rel="nofollow">December
2013</a>. The motivation behind GHOST
is that blockchains with fast confirmation times currently suffer from
reduced security due to a high stale rate - because blocks take a
certain time to propagate through the network, if miner A mines a block
and then miner B happens to mine another block before miner A's block
propagates to B, miner B's block will end up wasted and will not
contribute to network security. Furthermore, there is a centralization
issue: if miner A is a mining pool with 30% hashpower and B has 10%
hashpower, A will have a risk of producing a stale block 70% of the time
(since the other 30% of the time A produced the last block and so will
get mining data immediately) whereas B will have a risk of producing a
stale block 90% of the time. Thus, if the block interval is short enough
for the stale rate to be high, A will be substantially more efficient
simply by virtue of its size. With these two effects combined,
blockchains which produce blocks quickly are very likely to lead to one
mining pool having a large enough percentage of the network hashpower to
have de facto control over the mining process.</p>
<p>As described by Sompolinsky and Zohar, GHOST solves the first issue of
network security loss by including stale blocks in the calculation of
which chain is the "longest"; that is to say, not just the parent and
further ancestors of a block, but also the stale descendants of the
block's ancestor (in Ethereum jargon, "uncles") are added to the
calculation of which block has the largest total proof of work backing
it. To solve the second issue of centralization bias, we go beyond the
protocol described by Sompolinsky and Zohar, and also provide block
rewards to stales: a stale block receives 87.5% of its base reward, and
the nephew that includes the stale block receives the remaining 12.5%.
Transaction fees, however, are not awarded to uncles.</p>
<p>Ethereum implements a simplified version of GHOST which only goes down
seven levels. Specifically, it is defined as follows:</p>
<ul>
<li>A block must specify a parent, and it must specify 0 or more uncles</li>
<li>An uncle included in block <code>B</code> must have the following properties:</li>
<li>It must be a direct child of the <code>k</code>-th generation ancestor of <code>B</code>,
where <code>2 &lt;= k &lt;= 7</code>.</li>
<li>It cannot be an ancestor of <code>B</code>
</li>
<li>An uncle must be a valid block header, but does not need to be a
previously verified or even valid block</li>
<li>An uncle must be different from all uncles included in previous
blocks and all other uncles included in the same block
(non-double-inclusion)</li>
<li>For every uncle <code>U</code> in block <code>B</code>, the miner of <code>B</code> gets an
additional 3.125% added to its coinbase reward and the miner of U
gets 93.75% of a standard coinbase reward.</li>
</ul>
<p>This limited version of GHOST, with uncles includable only up to 7
generations, was used for two reasons. First, unlimited GHOST would
include too many complications into the calculation of which uncles for
a given block are valid. Second, unlimited GHOST with compensation as
used in Ethereum removes the incentive for a miner to mine on the main
chain and not the chain of a public attacker.</p>
<h2>
<a id="user-content-fees" class="anchor" href="#fees" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Fees</h2>
<p>Because every transaction published into the blockchain imposes on the
network the cost of needing to download and verify it, there is a need
for some regulatory mechanism, typically involving transaction fees, to
prevent abuse. The default approach, used in Bitcoin, is to have purely
voluntary fees, relying on miners to act as the gatekeepers and set
dynamic minimums. This approach has been received very favorably in the
Bitcoin community particularly because it is "market-based", allowing
supply and demand between miners and transaction senders determine the
price. The problem with this line of reasoning is, however, that
transaction processing is not a market; although it is intuitively
attractive to construe transaction processing as a service that the
miner is offering to the sender, in reality every transaction that a
miner includes will need to be processed by every node in the network,
so the vast majority of the cost of transaction processing is borne by
third parties and not the miner that is making the decision of whether
or not to include it. Hence, tragedy-of-the-commons problems are very
likely to occur.</p>
<p>However, as it turns out this flaw in the market-based mechanism, when
given a particular inaccurate simplifying assumption, magically cancels
itself out. The argument is as follows. Suppose that:</p>
<ol>
<li>A transaction leads to <code>k</code> operations, offering the reward <code>kR</code> to
any miner that includes it where <code>R</code> is set by the sender and <code>k</code>
and <code>R</code> are (roughly) visible to the miner beforehand.</li>
<li>An operation has a processing cost of <code>C</code> to any node (ie. all nodes
have equal efficiency)</li>
<li>There are <code>N</code> mining nodes, each with exactly equal processing power
(ie. <code>1/N</code> of total)</li>
<li>No non-mining full nodes exist.</li>
</ol>
<p>A miner would be willing to process a transaction if the expected reward
is greater than the cost. Thus, the expected reward is <code>kR/N</code> since the
miner has a <code>1/N</code> chance of processing the next block, and the
processing cost for the miner is simply <code>kC</code>. Hence, miners will include
transactions where <code>kR/N &gt; kC</code>, or <code>R &gt; NC</code>. Note that <code>R</code> is the
per-operation fee provided by the sender, and is thus a lower bound on
the benefit that the sender derives from the transaction, and <code>NC</code> is
the cost to the entire network together of processing an operation.
Hence, miners have the incentive to include only those transactions for
which the total utilitarian benefit exceeds the cost.</p>
<p>However, there are several important deviations from those assumptions
in reality:</p>
<ol>
<li>The miner does pay a higher cost to process the transaction than the
other verifying nodes, since the extra verification time delays
block propagation and thus increases the chance the block will
become a stale.</li>
<li>There do exist non-mining full nodes.</li>
<li>The mining power distribution may end up radically inegalitarian in
practice.</li>
<li>Speculators, political enemies and crazies whose utility function
includes causing harm to the network do exist, and they can cleverly
set up contracts where their cost is much lower than the cost paid
by other verifying nodes.</li>
</ol>
<p>(1) provides a tendency for the miner to include fewer transactions, and
(2) increases <code>NC</code>; hence, these two effects at least partially
cancel each other
out.<sup><a href="https://github.com/ethereum/wiki/issues/447#issuecomment-316972260">How?</a></sup>
(3) and (4) are the major issue; to solve them we simply institute a
floating cap: no block can have more operations than
<code>BLK_LIMIT_FACTOR</code> times the long-term exponential moving average.
Specifically:</p>
<pre><code>blk.oplimit = floor((blk.parent.oplimit \* (EMAFACTOR - 1) +
floor(parent.opcount \* BLK\_LIMIT\_FACTOR)) / EMA\_FACTOR)
</code></pre>
<p><code>BLK_LIMIT_FACTOR</code> and <code>EMA_FACTOR</code> are constants that will be set to
65536 and 1.5 for the time being, but will likely be changed after
further analysis.</p>
<p>There is another factor disincentivizing large block sizes in Bitcoin:
blocks that are large will take longer to propagate, and thus have a
higher probability of becoming stales. In Ethereum, highly gas-consuming
blocks can also take longer to propagate both because they are
physically larger and because they take longer to process the
transaction state transitions to validate. This delay disincentive is a
significant consideration in Bitcoin, but less so in Ethereum because of
the GHOST protocol; hence, relying on regulated block limits provides a
more stable baseline.</p>
<h2>
<a id="user-content-computation-and-turing-completeness" class="anchor" href="#computation-and-turing-completeness" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Computation And Turing-Completeness</h2>
<p>An important note is that the Ethereum virtual machine is
Turing-complete; this means that EVM code can encode any computation
that can be conceivably carried out, including infinite loops. EVM code
allows looping in two ways. First, there is a <code>JUMP</code> instruction that
allows the program to jump back to a previous spot in the code, and a
<code>JUMPI</code> instruction to do conditional jumping, allowing for statements
like <code>while x &lt; 27: x = x * 2</code>. Second, contracts can call other
contracts, potentially allowing for looping through recursion. This
naturally leads to a problem: can malicious users essentially shut
miners and full nodes down by forcing them to enter into an infinite
loop? The issue arises because of a problem in computer science known as
the halting problem: there is no way to tell, in the general case,
whether or not a given program will ever halt.</p>
<p>As described in the state transition section, our solution works by
requiring a transaction to set a maximum number of computational steps
that it is allowed to take, and if execution takes longer computation is
reverted but fees are still paid. Messages work in the same way. To show
the motivation behind our solution, consider the following examples:</p>
<ul>
<li>An attacker creates a contract which runs an infinite loop, and then
sends a transaction activating that loop to the miner. The miner
will process the transaction, running the infinite loop, and wait
for it to run out of gas. Even though the execution runs out of gas
and stops halfway through, the transaction is still valid and the
miner still claims the fee from the attacker for each computational
step.</li>
<li>An attacker creates a very long infinite loop with the intent of
forcing the miner to keep computing for such a long time that by the
time computation finishes a few more blocks will have come out and
it will not be possible for the miner to include the transaction to
claim the fee. However, the attacker will be required to submit a
value for <code>STARTGAS</code> limiting the number of computational steps that
execution can take, so the miner will know ahead of time that the
computation will take an excessively large number of steps.</li>
<li>An attacker sees a contract with code of some form like
<code>send(A,contract.storage[A]); contract.storage[A] = 0</code>, and sends a
transaction with just enough gas to run the first step but not the
second (ie. making a withdrawal but not letting the balance go
down). The contract author does not need to worry about protecting
against such attacks, because if execution stops halfway through the
changes they get reverted.</li>
<li>A financial contract works by taking the median of nine proprietary
data feeds in order to minimize risk. An attacker takes over one of
the data feeds, which is designed to be modifiable via the
variable-address-call mechanism described in the section on DAOs,
and converts it to run an infinite loop, thereby attempting to force
any attempts to claim funds from the financial contract to run out
of gas. However, the financial contract can set a gas limit on the
message to prevent this problem.</li>
</ul>
<p>The alternative to Turing-completeness is Turing-incompleteness, where
<code>JUMP</code> and <code>JUMPI</code> do not exist and only one copy of each contract is
allowed to exist in the call stack at any given time. With this system,
the fee system described and the uncertainties around the effectiveness
of our solution might not be necessary, as the cost of executing a
contract would be bounded above by its size. Additionally,
Turing-incompleteness is not even that big a limitation; out of all the
contract examples we have conceived internally, so far only one required
a loop, and even that loop could be removed by making 26 repetitions of
a one-line piece of code. Given the serious implications of
Turing-completeness, and the limited benefit, why not simply have a
Turing-incomplete language? In reality, however, Turing-incompleteness
is far from a neat solution to the problem. To see why, consider the
following contracts:</p>
<pre><code>C0: call(C1); call(C1);
C1: call(C2); call(C2);
C2: call(C3); call(C3);
...
C49: call(C50); call(C50);
C50: (run one step of a program and record the change in storage)
</code></pre>
<p>Now, send a transaction to A. Thus, in 51 transactions, we have a
contract that takes up 2<sup>50</sup> computational steps. Miners could
try to detect such logic bombs ahead of time by maintaining a value
alongside each contract specifying the maximum number of computational
steps that it can take, and calculating this for contracts calling other
contracts recursively, but that would require miners to forbid contracts
that create other contracts (since the creation and execution of all 26
contracts above could easily be rolled into a single contract). Another
problematic point is that the address field of a message is a variable,
so in general it may not even be possible to tell which other contracts
a given contract will call ahead of time. Hence, all in all, we have a
surprising conclusion: Turing-completeness is surprisingly easy to
manage, and the lack of Turing-completeness is equally surprisingly
difficult to manage unless the exact same controls are in place - but in
that case why not just let the protocol be Turing-complete?</p>
<h2>
<a id="user-content-currency-and-issuance" class="anchor" href="#currency-and-issuance" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Currency And Issuance</h2>
<p>The Ethereum network includes its own built-in currency, ether, which
serves the dual purpose of providing a primary liquidity layer to allow
for efficient exchange between various types of digital assets and, more
importantly, of providing a mechanism for paying transaction fees. For
convenience and to avoid future argument (see the current
mBTC/uBTC/satoshi debate in Bitcoin), the denominations will be
pre-labelled:</p>
<ul>
<li>1: wei</li>
<li>10<sup>12</sup>: szabo</li>
<li>10<sup>15</sup>: finney</li>
<li>10<sup>18</sup>: ether</li>
</ul>
<p>This should be taken as an expanded version of the concept of "dollars"
and "cents" or "BTC" and "satoshi". In the near future, we expect
"ether" to be used for ordinary transactions, "finney" for
microtransactions and "szabo" and "wei" for technical discussions around
fees and protocol implementation; the remaining denominations may become
useful later and should not be included in clients at this point.</p>
<p>The issuance model will be as follows:</p>
<ul>
<li>Ether will be released in a currency sale at the price of 1000-2000
ether per BTC, a mechanism intended to fund the Ethereum
organization and pay for development that has been used with success
by other platforms such as Mastercoin and NXT. Earlier buyers will
benefit from larger discounts. The BTC received from the sale will
be used entirely to pay salaries and bounties to developers and
invested into various for-profit and non-profit projects in the
Ethereum and cryptocurrency ecosystem.</li>
<li>0.099x the total amount sold (60102216 ETH) will be allocated to the
organization to compensate early contributors and pay
ETH-denominated expenses before the genesis block.</li>
<li>0.099x the total amount sold will be maintained as a long-term
reserve.</li>
<li>0.26x the total amount sold will be allocated to miners per year
forever after that point.</li>
</ul>
<p>Group                    At launch   After 1 year   After 5 years</p>
<hr>
<p>Currency units           1.198X      1.458X         2.498X
Purchasers               83.5%       68.6%          40.0%
Reserve spent pre-sale   8.26%       6.79%          3.96%
Reserve used post-sale   8.26%       6.79%          3.96%
Miners                   0%          17.8%          52.0%</p>
<p><strong>Long-Term Supply Growth Rate (percent)</strong></p>
<p><img src="https://raw.githubusercontent.com/ethereumbuilders/GitBook/master/en/vitalik-diagrams/inflation.png" alt="SPV in bitcoin"></p>
<p><em>Despite the linear currency issuance, just like with Bitcoin over time
the supply growth rate nevertheless tends to zero</em></p>
<p>The two main choices in the above model are (1) the existence and size
of an endowment pool, and (2) the existence of a permanently growing
linear supply, as opposed to a capped supply as in Bitcoin. The
justification of the endowment pool is as follows. If the endowment pool
did not exist, and the linear issuance reduced to 0.217x to provide the
same inflation rate, then the total quantity of ether would be 16.5%
less and so each unit would be 19.8% more valuable. Hence, in the
equilibrium 19.8% more ether would be purchased in the sale, so each
unit would once again be exactly as valuable as before. The organization
would also then have 1.198x as much BTC, which can be considered to be
split into two slices: the original BTC, and the additional 0.198x.
Hence, this situation is <em>exactly equivalent</em> to the endowment, but with
one important difference: the organization holds purely BTC, and so is
not incentivized to support the value of the ether unit.</p>
<p>The permanent linear supply growth model reduces the risk of what some
see as excessive wealth concentration in Bitcoin, and gives individuals
living in present and future eras a fair chance to acquire currency
units, while at the same time retaining a strong incentive to obtain and
hold ether because the "supply growth rate" as a percentage still tends
to zero over time. We also theorize that because coins are always lost
over time due to carelessness, death, etc, and coin loss can be modeled
as a percentage of the total supply per year, that the total currency
supply in circulation will in fact eventually stabilize at a value equal
to the annual issuance divided by the loss rate (eg. at a loss rate of
1%, once the supply reaches 26X then 0.26X will be mined and 0.26X lost
every year, creating an equilibrium).</p>
<p>Note that in the future, it is likely that Ethereum will switch to a
proof-of-stake model for security, reducing the issuance requirement to
somewhere between zero and 0.05X per year. In the event that the
Ethereum organization loses funding or for any other reason disappears,
we leave open a "social contract": anyone has the right to create a
future candidate version of Ethereum, with the only condition being that
the quantity of ether must be at most equal to
<code>60102216 * (1.198 + 0.26 * n)</code> where <code>n</code> is the number of years after
the genesis block. Creators are free to crowd-sell or otherwise assign
some or all of the difference between the PoS-driven supply expansion
and the maximum allowable supply expansion to pay for development.
Candidate upgrades that do not comply with the social contract may
justifiably be forked into compliant versions.</p>
<h2>
<a id="user-content-mining-centralization" class="anchor" href="#mining-centralization" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Mining Centralization</h2>
<p>The Bitcoin mining algorithm works by having miners compute SHA256 on
slightly modified versions of the block header millions of times over
and over again, until eventually one node comes up with a version whose
hash is less than the target (currently around 2<sup>192</sup>).
However, this mining algorithm is vulnerable to two forms of
centralization. First, the mining ecosystem has come to be dominated by
ASICs (application-specific integrated circuits), computer chips
designed for, and therefore thousands of times more efficient at, the
specific task of Bitcoin mining. This means that Bitcoin mining is no
longer a highly decentralized and egalitarian pursuit, requiring
millions of dollars of capital to effectively participate in. Second,
most Bitcoin miners do not actually perform block validation locally;
instead, they rely on a centralized mining pool to provide the block
headers. This problem is arguably worse: as of the time of this writing,
the top three mining pools indirectly control roughly 50% of processing
power in the Bitcoin network, although this is mitigated by the fact
that miners can switch to other mining pools if a pool or coalition
attempts a 51% attack.</p>
<p>The current intent at Ethereum is to use a mining algorithm where miners
are required to fetch random data from the state, compute some randomly
selected transactions from the last N blocks in the blockchain, and
return the hash of the result. This has two important benefits. First,
Ethereum contracts can include any kind of computation, so an Ethereum
ASIC would essentially be an ASIC for general computation - ie. a better
CPU. Second, mining requires access to the entire blockchain, forcing
miners to store the entire blockchain and at least be capable of
verifying every transaction. This removes the need for centralized
mining pools; although mining pools can still serve the legitimate role
of evening out the randomness of reward distribution, this function can
be served equally well by peer-to-peer pools with no central control.</p>
<p>This model is untested, and there may be difficulties along the way in
avoiding certain clever optimizations when using contract execution as a
mining algorithm. However, one notably interesting feature of this
algorithm is that it allows anyone to "poison the well", by introducing
a large number of contracts into the blockchain specifically designed to
stymie certain ASICs. The economic incentives exist for ASIC
manufacturers to use such a trick to attack each other. Thus, the
solution that we are developing is ultimately an adaptive economic human
solution rather than purely a technical one.</p>
<h2>
<a id="user-content-scalability" class="anchor" href="#scalability" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Scalability</h2>
<p>One common concern about Ethereum is the issue of scalability. Like
Bitcoin, Ethereum suffers from the flaw that every transaction needs to
be processed by every node in the network. With Bitcoin, the size of the
current blockchain rests at about 15 GB, growing by about 1 MB per hour.
If the Bitcoin network were to process Visa's 2000 transactions per
second, it would grow by 1 MB per three seconds (1 GB per hour, 8 TB per
year). Ethereum is likely to suffer a similar growth pattern, worsened
by the fact that there will be many applications on top of the Ethereum
blockchain instead of just a currency as is the case with Bitcoin, but
ameliorated by the fact that Ethereum full nodes need to store just the
state instead of the entire blockchain history.</p>
<p>The problem with such a large blockchain size is centralization risk. If
the blockchain size increases to, say, 100 TB, then the likely scenario
would be that only a very small number of large businesses would run
full nodes, with all regular users using light SPV nodes. In such a
situation, there arises the potential concern that the full nodes could
band together and all agree to cheat in some profitable fashion (eg.
change the block reward, give themselves BTC). Light nodes would have no
way of detecting this immediately. Of course, at least one honest full
node would likely exist, and after a few hours information about the
fraud would trickle out through channels like Reddit, but at that point
it would be too late: it would be up to the ordinary users to organize
an effort to blacklist the given blocks, a massive and likely infeasible
coordination problem on a similar scale as that of pulling off a
successful 51% attack. In the case of Bitcoin, this is currently a
problem, but there exists a blockchain modification <a href="https://web.archive.org/web/20140623061815/http://sourceforge.net/p/bitcoin/mailman/message/31709140/" rel="nofollow">suggested by Peter
Todd</a>
which will alleviate this issue.</p>
<p>In the near term, Ethereum will use two additional strategies to cope
with this problem. First, because of the blockchain-based mining
algorithms, at least every miner will be forced to be a full node,
creating a lower bound on the number of full nodes. Second and more
importantly, however, we will include an intermediate state tree root in
the blockchain after processing each transaction. Even if block
validation is centralized, as long as one honest verifying node exists,
the centralization problem can be circumvented via a verification
protocol. If a miner publishes an invalid block, that block must either
be badly formatted, or the state <code>S[n]</code> is incorrect. Since <code>S[0]</code> is
known to be correct, there must be some first state <code>S[i]</code> that is
incorrect where <code>S[i-1]</code> is correct. The verifying node would provide
the index <code>i</code>, along with a "proof of invalidity" consisting of the
subset of Patricia tree nodes needing to process
<code>APPLY(S[i-1],TX[i]) -&gt; S[i]</code>. Nodes would be able to use those Patricia
nodes to run that part of the computation, and see that the <code>S[i]</code>
generated does not match the <code>S[i]</code> provided.</p>
<p>Another, more sophisticated, attack would involve the malicious miners
publishing incomplete blocks, so the full information does not even
exist to determine whether or not blocks are valid. The solution to this
is a challenge-response protocol: verification nodes issue "challenges"
in the form of target transaction indices, and upon receiving a node a
light node treats the block as untrusted until another node, whether the
miner or another verifier, provides a subset of Patricia nodes as a
proof of validity.</p>
<h1>
<a id="user-content-conclusion" class="anchor" href="#conclusion" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Conclusion</h1>
<p>The Ethereum protocol was originally conceived as an upgraded version of
a cryptocurrency, providing advanced features such as on-blockchain
escrow, withdrawal limits, financial contracts, gambling markets and the
like via a highly generalized programming language. The Ethereum
protocol would not "support" any of the applications directly, but the
existence of a Turing-complete programming language means that arbitrary
contracts can theoretically be created for any transaction type or
application. What is more interesting about Ethereum, however, is that
the Ethereum protocol moves far beyond just currency. Protocols around
decentralized file storage, decentralized computation and decentralized
prediction markets, among dozens of other such concepts, have the
potential to substantially increase the efficiency of the computational
industry, and provide a massive boost to other peer-to-peer protocols by
adding for the first time an economic layer. Finally, there is also a
substantial array of applications that have nothing to do with money at
all.</p>
<p>The concept of an arbitrary state transition function as implemented by
the Ethereum protocol provides for a platform with unique potential;
rather than being a closed-ended, single-purpose protocol intended for a
specific array of applications in data storage, gambling or finance,
Ethereum is open-ended by design, and we believe that it is extremely
well-suited to serving as a foundational layer for a very large number
of both financial and non-financial protocols in the years to come.</p>
<h1>
<a id="user-content-notes-and-further-reading" class="anchor" href="#notes-and-further-reading" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Notes and Further Reading</h1>

<h2>
<a id="user-content-notes" class="anchor" href="#notes" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Notes</h2>
<ol>
<li>A sophisticated reader may notice that in fact a Bitcoin address is
the hash of the elliptic curve public key, and not the public key
itself. However, it is in fact perfectly legitimate cryptographic
terminology to refer to the pubkey hash as a public key itself. This
is because Bitcoin's cryptography can be considered to be a custom
digital signature algorithm, where the public key consists of the
hash of the ECC pubkey, the signature consists of the ECC pubkey
concatenated with the ECC signature, and the verification algorithm
involves checking the ECC pubkey in the signature against the ECC
pubkey hash provided as a public key and then verifying the ECC
signature against the ECC pubkey.</li>
<li>Technically, the median of the 11 previous blocks.</li>
<li>The Ethereum protocol should be as simple as practical, but it may
be necessary to have quite a high level of complexity, for instance
to scale, to internalize costs of storage, bandwidth and I/O, for
security, privacy, transparency, etc. Where complexity is necessary,
documentation should be as clear, concise and up-to-date as
possible, so that someone completely unschooled in Ethereum can
learn it and become an expert.</li>
<li>See the <a href="https://ethereum.github.io/yellowpaper/paper.pdf" rel="nofollow">Yellow
Paper</a> for the
Ethereum Virtual Machine (which is useful as a specification and as
a reference for building an Ethereum client from scratch), while
also there are many topics in the <a href="https://github.com/ethereum/wiki/wiki">Ethereum
wiki</a>, such as sharding
developmment, core development, dapp development, research, Casper
R&amp;D, and networking protocols. For research and possible future
implementation there is <a href="https://ethresear.ch" rel="nofollow">ethresear.ch</a>.</li>
<li>Another way of expressing this is abstraction. The <a href="https://ethresear.ch/t/sharding-phase-1-spec/1407/67" rel="nofollow">latest
roadmap</a> is
planning to abstract execution, allowing execution engines to not
necessarily have to follow one canonical specification, but for
instance it could be tailored for a specific application, as well as
a shard. (This heterogeneity of execution engines is not explicitly
stated in the roadmap. There is also heterogeneous sharding, which
Vlad Zamfir conceptualized.)</li>
<li>Internally, 2 and "CHARLIE" are both numbers, with the latter being
in big-endian base 256 representation. Numbers can be at least 0 and
at most 2<sup>256</sup>-1.</li>
</ol>
<h2>
<a id="user-content-further-reading" class="anchor" href="#further-reading" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Further Reading</h2>
<ol>
<li>Intrinsic value:
<a href="http://bitcoinmagazine.com/8640/an-exploration-of-intrinsic-value-what-it-is-why-bitcoin-doesnt-have-it-and-why-bitcoin-does-have-it/" rel="nofollow">http://bitcoinmagazine.com/8640/an-exploration-of-intrinsic-value-what-it-is-why-bitcoin-doesnt-have-it-and-why-bitcoin-does-have-it/</a>
</li>
<li>Smart property: <a href="https://en.bitcoin.it/wiki/Smart%5C_Property" rel="nofollow">https://en.bitcoin.it/wiki/Smart\_Property</a>
</li>
<li>Smart contracts: <a href="https://en.bitcoin.it/wiki/Contracts" rel="nofollow">https://en.bitcoin.it/wiki/Contracts</a>
</li>
<li>B-money: <a href="http://www.weidai.com/bmoney.txt" rel="nofollow">http://www.weidai.com/bmoney.txt</a>
</li>
<li>Reusable proofs of work: <a href="http://www.finney.org/%5C~hal/rpow/" rel="nofollow">http://www.finney.org/\~hal/rpow/</a>
</li>
<li>Secure property titles with owner authority:
<a href="http://szabo.best.vwh.net/securetitle.html" rel="nofollow">http://szabo.best.vwh.net/securetitle.html</a>
</li>
<li>Bitcoin whitepaper: <a href="http://bitcoin.org/bitcoin.pdf" rel="nofollow">http://bitcoin.org/bitcoin.pdf</a>
</li>
<li>Namecoin: <a href="https://namecoin.org/" rel="nofollow">https://namecoin.org/</a>
</li>
<li>Zooko's triangle: <a href="http://en.wikipedia.org/wiki/Zooko's%5C_triangle" rel="nofollow">http://en.wikipedia.org/wiki/Zooko's\_triangle</a>
</li>
<li>Colored coins whitepaper:
<a href="https://docs.google.com/a/buterin.com/document/d/1AnkP%5C_cVZTCMLIzw4DvsW6M8Q2JC0lIzrTLuoWu2z1BE/edit" rel="nofollow">https://docs.google.com/a/buterin.com/document/d/1AnkP\_cVZTCMLIzw4DvsW6M8Q2JC0lIzrTLuoWu2z1BE/edit</a>
</li>
<li>Mastercoin whitepaper: <a href="https://github.com/mastercoin-MSC/spec">https://github.com/mastercoin-MSC/spec</a>
</li>
<li>Decentralized autonomous corporations, Bitcoin Magazine:
<a href="http://bitcoinmagazine.com/7050/bootstrapping-a-decentralized-autonomous-corporation-part-i/" rel="nofollow">http://bitcoinmagazine.com/7050/bootstrapping-a-decentralized-autonomous-corporation-part-i/</a>
</li>
<li>Simplified payment verification:
<a href="https://en.bitcoin.it/wiki/Scalability%5C#Simplifiedpaymentverification" rel="nofollow">https://en.bitcoin.it/wiki/Scalability\#Simplifiedpaymentverification</a>
</li>
<li>Merkle trees: <a href="http://en.wikipedia.org/wiki/Merkle%5C_tree" rel="nofollow">http://en.wikipedia.org/wiki/Merkle\_tree</a>
</li>
<li>Patricia trees: <a href="http://en.wikipedia.org/wiki/Patricia%5C_tree" rel="nofollow">http://en.wikipedia.org/wiki/Patricia\_tree</a>
</li>
<li>GHOST: <a href="https://eprint.iacr.org/2013/881.pdf" rel="nofollow">https://eprint.iacr.org/2013/881.pdf</a>
</li>
<li>StorJ and Autonomous Agents, Jeff Garzik:
<a href="http://garzikrants.blogspot.ca/2013/01/storj-and-bitcoin-autonomous-agents.html" rel="nofollow">http://garzikrants.blogspot.ca/2013/01/storj-and-bitcoin-autonomous-agents.html</a>
</li>
<li>Mike Hearn on Smart Property at Turing Festival:
<a href="http://www.youtube.com/watch?v=Pu4PAMFPo5Y" rel="nofollow">http://www.youtube.com/watch?v=Pu4PAMFPo5Y</a>
</li>
<li>Ethereum RLP:
<a href="https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP">https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP</a>
</li>
<li>Ethereum Merkle Patricia trees:
<a href="https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-Patricia-Tree">https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-Patricia-Tree</a>
</li>
<li>Peter Todd on Merkle sum trees:
<a href="http://sourceforge.net/p/bitcoin/mailman/message/31709140/" rel="nofollow">http://sourceforge.net/p/bitcoin/mailman/message/31709140/</a>
</li>
</ol>
<p>For history of the white paper, see
<a href="https://github.com/ethereum/wiki/blob/old-before-deleting-all-files-go-to-wiki-wiki-instead/old-whitepaper-for-historical-reference.md%5C#historical-sources-of-the-white-paper">https://github.com/ethereum/wiki/blob/old-before-deleting-all-files-go-to-wiki-wiki-instead/old-whitepaper-for-historical-reference.md\#historical-sources-of-the-white-paper</a></p>

        </div>

        <div id="wiki-footer" class="mt-5 mb-0 wiki-footer gollum-markdown-content">
          <div class="Box Box--condensed bg-gray box-shadow">
            <div class="Box-body  markdown-body">
              <p>| <a href="https://github.com/ethereum/wiki/wiki/%5BGerman%5D-Ethereum-TOC">Deutsch</a>
| <a href="https://github.com/ethereum/wiki/wiki">English</a>
| <a href="https://github.com/ethereum/wiki/wiki/%5BSpanish%5D-Ethereum-TOC">Español</a>
| <a href="https://github.com/ethereum/wiki/wiki/%5BFrench%5D-Ethereum-TOC">Français</a>
| <a href="https://github.com/ethereum/wiki/wiki/%5BKorean%5D-White-Paper">한국어</a>
| <a href="https://github.com/ethereum/wiki/wiki/%5BItalian%5D-Ethereum-TOC">Italiano</a>
| <a href="https://github.com/ethereum/wiki/wiki/%5BPortuguese%5D-White-Paper/">Portuguese</a>
| <a href="https://github.com/ethereum/wiki/wiki/%5BRomanian%5D-Cuprins">Română</a>
| <a href="https://github.com/ethereum/wiki/wiki/%D8%A7%D9%84%D8%B9%D8%B1%D8%A8%D9%8A%D8%A9">العربية</a>
| <a href="https://github.com/ethereum/wiki/wiki/%5BPersian%5D-Ethereum-TOC">فارسی</a>
| <a href="https://github.com/ethereum/wiki/wiki/%5BChinese%5D-Ethereum-TOC">中文(繁体)</a></p>
<p>| <a href="https://github.com/ethereum/wiki/wiki/%5BSimplified-Chinese%5D-Ethereum-TOC">中文(简体)</a>
| <a href="https://github.com/ethereum/wiki/wiki/%5BJapanese%5D-Ethereum-TOC">日本語</a>
</p>
            </div>
          </div>
        </div>
    </div>

    <div id="wiki-rightbar" class="mt-4 ml-md-6 flex-shrink-0 width-full wiki-rightbar">
      <div id="wiki-pages-box" class="mb-4 wiki-pages-box js-wiki-pages-box" role="navigation">
        
<div class="Box Box--condensed box-shadow">
  <div class="Box-header js-wiki-toggle-collapse" style="cursor: pointer">
    <h3 class="Box-title">
      <svg class="octicon octicon-triangle-down js-wiki-sidebar-toggle-display d-none" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M0 5l6 6 6-6H0z"/></svg>
      <svg class="octicon octicon-triangle-right js-wiki-sidebar-toggle-display" viewBox="0 0 6 16" version="1.1" width="6" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M0 14l6-6-6-6v12z"/></svg>
      Pages <span class="Counter Counter--gray">231</span>
    </h3>
  </div>
  <div class="d-none js-wiki-sidebar-toggle-display">
    <div class="filter-bar">
      <input type="text" id="wiki-pages-filter" class="form-control input-sm input-block js-filterable-field" placeholder="Find a Page…" aria-label="Find a Page…">
    </div>

    <ul class="m-0 p-0 list-style-none" data-filterable-for="wiki-pages-filter" data-filterable-type="substring">
        <li class="Box-row">
          <strong><a class="d-block" href="/ethereum/wiki/wiki">Home</a></strong>
        </li>
        <li class="Box-row">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/0x8DE4e545C7C136fB5b6B1e2a8d0f121b929AA08c">0x8DE4e545C7C136fB5b6B1e2a8d0f121b929AA08c</a></strong>
        </li>
        <li class="Box-row">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/5-strategies-of-contribution">5 strategies of contribution</a></strong>
        </li>
        <li class="Box-row">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BArabic%5D-Home-in-Arabic">[Arabic] Home in Arabic</a></strong>
        </li>
        <li class="Box-row">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BArabic%5D-%D8%A7%D9%84%D8%B9%D8%B1%D8%A8%D9%8A%D8%A9">[Arabic] العربية</a></strong>
        </li>
        <li class="Box-row">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BArabic%5D-%D9%85%D8%B1%D8%AD%D8%A8%D8%A7--%D9%81%D9%8A-%D8%B5%D9%81%D8%AD%D8%A9-%D8%A7%D9%84%D9%88%D9%8A%D9%83%D9%8A-%D9%84%D9%84%D8%A3%D8%AB%D9%8A%D8%B1%D9%8A%D9%88%D9%85">[Arabic] مرحبا  في صفحة الويكي للأثيريوم</a></strong>
        </li>
        <li class="Box-row">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BChinese-Simplified%5D-Ethash-Design-Rationale%E4%B8%AD%E6%96%87%E7%BF%BB%E8%AF%91">[Chinese Simplified] Ethash Design Rationale中文翻译</a></strong>
        </li>
        <li class="Box-row">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BChinese-Simplified%5D-Ethash%E4%B8%AD%E6%96%87%E7%BF%BB%E8%AF%91">[Chinese Simplified] Ethash中文翻译</a></strong>
        </li>
        <li class="Box-row">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BChinese-Simplified%5D-Ethereum-%E7%99%BD%E7%9A%AE%E4%B9%A6%E4%B8%AD%E6%96%87%E7%89%88">[Chinese Simplified] Ethereum 白皮书中文版</a></strong>
        </li>
        <li class="Box-row">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BChinese%5D-Design-Rationale-%E8%AE%BE%E8%AE%A1%E5%8E%9F%E7%90%86">[Chinese] Design Rationale 设计原理</a></strong>
        </li>
        <li class="Box-row">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BChinese%5D-Ethereum-TOC">[Chinese] Ethereum TOC</a></strong>
        </li>
        <li class="Box-row">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BChinese%5D-Ethereum-%E7%99%BD%E7%9A%AE%E6%9B%B8">[Chinese] Ethereum 白皮書</a></strong>
        </li>
        <li class="Box-row">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BChinese%5D%C3%90%CE%9EVp2p-Wire-Protocol%E4%B8%AD%E6%96%87%E7%BF%BB%E8%AF%91">[Chinese]ÐΞVp2p Wire Protocol中文翻译</a></strong>
        </li>
        <li class="Box-row">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BEnglish%5D-Patricia-Tree">[English] Patricia Tree</a></strong>
        </li>
        <li class="Box-row">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BEnglish%5D-RLP">[English] RLP</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BEnglish%5D-RLP%7CRLP">[English] RLP|RLP</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BEnglish%5D-White-Paper">[English] White Paper</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BFrench%5D-Ethereum-TOC">[French] Ethereum TOC</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BGerman%5D-Clearinghaus">[German] Clearinghaus</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BGerman%5D-Ethereum-TOC">[German] Ethereum TOC</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BGerman%5D-RLP">[German] RLP</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BGerman%5D-White-Paper">[German] White Paper</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BIndonesian%5D-Ethereum-akan-naik-karena-teknologi--terus-dikembangkan-dan-ditingkatkan">[Indonesian] Ethereum akan naik karena teknologi  terus dikembangkan dan ditingkatkan</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BItalian%5D-Ethereum-TOC">[Italian] Ethereum TOC</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BItalian%5D-Impostare-il-proprio-ambiente-di-sviluppo-Ethereum">[Italian] Impostare il proprio ambiente di sviluppo Ethereum</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BItalian%5D-Introduzione-allo-sviluppo-su-Ethereum">[Italian] Introduzione allo sviluppo su Ethereum</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BItalian%5D-Libro-Bianco">[Italian] Libro Bianco</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BJapanese%5D--Ethereum-Development-Tutorial">[Japanese]  Ethereum Development Tutorial</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BJapanese%5D--Liscence">[Japanese]  Liscence</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BJapanese%5D-Cryptocurrency-Current-Problems">[Japanese] Cryptocurrency Current Problems</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BJapanese%5D-Design-Rationale">[Japanese] Design Rationale</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BJapanese%5D-Ethereum-2.0-Phase-0----The-Beacon-Chain">[Japanese] Ethereum 2.0 Phase 0    The Beacon Chain</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BJapanese%5D-Ethereum-TOC">[Japanese] Ethereum TOC</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BJapanese%5D-Ethereum-Wire-Protocol">[Japanese] Ethereum Wire Protocol</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BJapanese%5D-HPOC_2015">[Japanese] HPOC_2015</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BJapanese%5D-Javascript-API">[Japanese] Javascript API</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BJapanese%5D-libp2p-whitepaper">[Japanese] libp2p whitepaper</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BJapanese%5D-Meteor%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6Dapp%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86">[Japanese] Meteorを使ってDappを作ろう</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BJapanese%5D-Patricia-Tree">[Japanese] Patricia Tree</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BJapanese%5D-Proof-of-Stake-FAQs">[Japanese] Proof of Stake FAQs</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BJapanese%5D-RLP">[Japanese] RLP</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BJapanese%5D-Whisper">[Japanese] Whisper</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BJapanese%5D-Whisper-PoC-2-Protocol-Spec">[Japanese] Whisper PoC 2 Protocol Spec</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BJapanese%5D-White-Paper">[Japanese] White Paper</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BJapanese%5D-%C3%90%CE%9EVp2p-Wire-Protocol">[Japanese] ÐΞVp2p Wire Protocol</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BKorean%5D-White-Paper">[Korean] White Paper</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BPersian%5D-Ethereum-TOC">[Persian] Ethereum TOC</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BPersian%5D-White-Paper">[Persian] White Paper</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BPortuguese%5D-White-Paper">[Portuguese] White Paper</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BRomanian%5D-Cuprins">[Romanian] Cuprins</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BRomanian%5D-Limbajul-de-programare-Serpent">[Romanian] Limbajul de programare Serpent</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BRomanian%5D-Patricia-Tree">[Romanian] Patricia Tree</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BRomanian%5D-RLP">[Romanian] RLP</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BRomanian%5D-White-Paper">[Romanian] White Paper</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BRomanian%5D-Wire-Protocol">[Romanian] Wire Protocol</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BRussian%5D-%D0%A0%D1%83%D0%BA%D0%BE%D0%B2%D0%BE%D0%B4%D1%81%D1%82%D0%B2%D0%BE-%D0%BF%D0%BE-Solidity">[Russian] Руководство по Solidity</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BSimplified-Chinese%5D-Ethereum-TOC">[Simplified Chinese] Ethereum TOC</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BSpanish%5D-Byzantium-Hard-Fork-changes">[Spanish] Byzantium Hard Fork changes</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BSpanish%5D-Ethereum-TOC">[Spanish] Ethereum TOC</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BSpanish%5D-Glossary">[Spanish] Glossary</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BSpanish%5D-Home">[Spanish] Home</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BSpanish%5D-Releases">[Spanish] Releases</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BSpanish%5D-White-Paper.md">[Spanish] White Paper.md</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BSpanish%5DProof-of-Stake-FAQ">[Spanish]Proof of Stake FAQ</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5BSpanish%5DSharding-FAQ">[Spanish]Sharding FAQ</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5B%E4%B8%AD%E6%96%87%5D-RLP">[中文] RLP</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5B%E4%B8%AD%E6%96%87%5D-Serpent%E6%8C%87%E5%8D%97">[中文] Serpent指南</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5B%E4%B8%AD%E6%96%87%5D-%E4%BB%A5%E5%A4%AA%E5%9D%8AWiki%E7%9B%AE%E5%BD%95">[中文] 以太坊Wiki目录</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5B%E4%B8%AD%E6%96%87%5D-%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%BC%80%E5%8F%91%E8%AE%A1%E5%88%92">[中文] 以太坊开发计划</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5B%E4%B8%AD%E6%96%87%5D-%E4%BB%A5%E5%A4%AA%E5%9D%8A%E6%9C%AF%E8%AF%AD%E8%A1%A8">[中文] 以太坊术语表</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5B%E4%B8%AD%E6%96%87%5D-%E4%BB%A5%E5%A4%AA%E5%9D%8A%E7%99%BD%E7%9A%AE%E4%B9%A6">[中文] 以太坊白皮书</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5B%E4%B8%AD%E6%96%87%5D-%E7%BD%91%E7%BB%9C%E7%8A%B6%E6%80%81">[中文] 网络状态</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%5B%E6%97%A5%E6%9C%AC%E8%AA%9E%5D-Proof-of-Stake-FAQ">[日本語] Proof of Stake FAQ</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Adaptive-Message-IDs">Adaptive Message IDs</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Adaptive-Peer-Time">Adaptive Peer Time</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Alternative-blockchains,-randomness,-economics,-and-other-research-topics">Alternative blockchains, randomness, economics, and other research topics</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Bad-Block-Reporting">Bad Block Reporting</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Bad-Chain-Canary">Bad Chain Canary</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Benchmarks">Benchmarks</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Block-Protocol-2.0">Block Protocol 2.0</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Blockchain-import-and-export-instructions">Blockchain import and export instructions</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Brain-Wallet">Brain Wallet</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Bugs">Bugs</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Byzantium-Hard-Fork-changes">Byzantium Hard Fork changes</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/c-value-class-SwitchParameter">c value class SwitchParameter</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Casper-Proof-of-Stake-compendium">Casper Proof of Stake compendium</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/CC0-license">CC0 license</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Chain-Fibers-Redux">Chain Fibers Redux</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Client-Version-Strings">Client Version Strings</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Clients">Clients</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Clients,-tools,-dapp-browsers,-wallets-and-other-projects">Clients, tools, dapp browsers, wallets and other projects</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Consensus-Datastructures">Consensus Datastructures</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Consortium-Chain-Development">Consortium Chain Development</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Contract">Contract</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Contract-ERC20-ABI">Contract ERC20 ABI</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Contract-metadata">Contract metadata</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Contract-Metadata-Docs-(NatSpec,-ABI)">Contract Metadata Docs (NatSpec, ABI)</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Dagger-Hashimoto">Dagger Hashimoto</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Dapp-Developer-Resources">Dapp Developer Resources</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Dapp-using-Meteor">Dapp using Meteor</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Decentralized-apps-(dapps)">Decentralized apps (dapps)</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Default-Extra-Data-Standard">Default Extra Data Standard</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Design-Rationale">Design Rationale</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Deterministic_Wallet_Spec">Deterministic_Wallet_Spec</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Distributed-Preimage-Archive">Distributed Preimage Archive</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/enode-url-format">enode url format</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/ERC-735:-Claim-Holder-Registry-vs.-in-contract">ERC 735: Claim Holder Registry vs. in contract</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Ethash">Ethash</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Ethash-C-API">Ethash C API</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Ethash-DAG">Ethash DAG</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Ethash-DAG-Disk-Storage-Format">Ethash DAG Disk Storage Format</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Ethash-Design-Rationale">Ethash Design Rationale</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Ethereum">Ethereum</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Ethereum-Chain-Spec-Format">Ethereum Chain Spec Format</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Ethereum-Client-Architecture">Ethereum Client Architecture</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Ethereum-Contract-ABI">Ethereum Contract ABI</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Ethereum-Development-Tutorial">Ethereum Development Tutorial</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Ethereum-Introduction">Ethereum Introduction</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Ethereum-Natural-Specification-Format">Ethereum Natural Specification Format</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Ethereum-Sharding-Research-Compendium">Ethereum Sharding Research Compendium</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Ethereum-Virtual-Machine-(EVM)-Awesome-List">Ethereum Virtual Machine (EVM) Awesome List</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Ethereum-White-Paper">Ethereum White Paper</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/ethereum-wiki">ethereum wiki</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Ethereum-Wire-Protocol">Ethereum Wire Protocol</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/EWasm-compendium">EWasm compendium</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Extra-Data">Extra Data</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/e%CF%80-Programme">eπ Programme</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/FAQ">FAQ</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/FAQs">FAQs</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/FinCrypChain">FinCrypChain</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/FREEDOM.IO">FREEDOM.IO</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Geth-Dapp-loading-proposal">Geth Dapp loading proposal</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Getting-Ether">Getting Ether</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Getting-Ether:-further-info">Getting Ether: further info</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Gitter-Channels">Gitter Channels</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Glossary">Glossary</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Governance-compendium">Governance compendium</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Grants-and-funding-sources">Grants and funding sources</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/How-to-choose-Cheap-and-high-quality-Dedicated-Servers">How to choose Cheap and high quality Dedicated Servers</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/HPOC_2015">HPOC_2015</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/ICAP:-Inter-exchange-Client-Address-Protocol">ICAP: Inter exchange Client Address Protocol</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Inter-exchange-Client-Address-Protocol-(ICAP)">Inter exchange Client Address Protocol (ICAP)</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/IPv6">IPv6</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/JavaScript-API">JavaScript API</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/JSON-RPC">JSON RPC</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/JSON-RPC-Error-Codes-Improvement-Proposal">JSON RPC Error Codes Improvement Proposal</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Kademlia-Peer-Selection">Kademlia Peer Selection</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/libp2p-Whitepaper">libp2p Whitepaper</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Licensing">Licensing</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Light-client-protocol">Light client protocol</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/List-of-other-Ethereum-wikis-and-documentation">List of other Ethereum wikis and documentation</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Major-issues-resulting-in-lost-or-stuck-funds">Major issues resulting in lost or stuck funds</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Middleware-and-Dapp-Project-Ideas">Middleware and Dapp Project Ideas</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Mindsnews">Mindsnews</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Mining">Mining</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Mist-Troubleshooting-Guide">Mist Troubleshooting Guide</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Mix-Features">Mix Features</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Mix-improvement-proposal">Mix improvement proposal</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Mix:-The-DApp-IDE">Mix: The DApp IDE</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Morden">Morden</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Natspec-Example">Natspec Example</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Network-Status">Network Status</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/newBlockFilter-Improvement-Proposal">newBlockFilter Improvement Proposal</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Node-discovery-protocol">Node discovery protocol</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Open-positions-&amp;-Schemes">Open positions &amp; Schemes</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Outdated:-Poll-for-token-proposal-EIP-20">Outdated: Poll for token proposal EIP 20</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Outdated:-Proposal:-Reversion-Notification">Outdated: Proposal: Reversion Notification</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Outdated:-Proposal:-Transaction-Proxy-Hooks">Outdated: Proposal: Transaction Proxy Hooks</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Parallel-Block-Downloads">Parallel Block Downloads</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Patricia-Tree">Patricia Tree</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Problems">Problems</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Programming-languages-intro">Programming languages intro</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Proof-of-Stake-FAQ">Proof of Stake FAQ</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Proof-of-Stake-FAQs">Proof of Stake FAQs</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/R&amp;D">R&amp;D</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Raspberry-Pi-instructions">Raspberry Pi instructions</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Registrar-ABI">Registrar ABI</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Relay-projects">Relay projects</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/RLP">RLP</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/RPC-Testing">RPC Testing</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Safety">Safety</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/SAYYAN%E2%80%8B">SAYYAN​</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Scaling-projects-and-proposals-and-other-crypto-infrastructure-projects">Scaling projects and proposals and other crypto infrastructure projects</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Security-Categorization">Security Categorization</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Security-Issue-Process">Security Issue Process</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Serpent">Serpent</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Serpent-%5BDEPRECATED%5D">Serpent [DEPRECATED]</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Sharding-FAQ">Sharding FAQ</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Sharding-FAQs">Sharding FAQs</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Sharding-introduction-and-implementations">Sharding introduction and implementations</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Sharding-introduction-and-R&amp;D">Sharding introduction and R&amp;D</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Sharding-introduction-R&amp;D-compendium">Sharding introduction R&amp;D compendium</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Sharding-roadmap">Sharding roadmap</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/SM1THBR3N-CONSENSUS-CORE-MINER">SM1THBR3N CONSENSUS CORE MINER</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Solidity">Solidity</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Solidity-Changelog">Solidity Changelog</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Solidity-Collections">Solidity Collections</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Solidity-Features">Solidity Features</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Solidity-Glossary">Solidity Glossary</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Solidity-standard-library">Solidity standard library</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Solidity-Tutorial">Solidity Tutorial</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Solidity,-Docs-and-ABI">Solidity, Docs and ABI</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Standardized_Contract_APIs">Standardized_Contract_APIs</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Storage-projects">Storage projects</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Subtleties">Subtleties</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Swarm-Hash">Swarm Hash</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/The-Solidity-Programming-Language">The Solidity Programming Language</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Token-Mining">Token Mining</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Topics-that-span-across-research-categories:-alternative-blockchains,-randomness,-economics,-etc.">Topics that span across research categories: alternative blockchains, randomness, economics, etc.</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Tt">Tt</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/URL-Hint-Protocol">URL Hint Protocol</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Useful-%C3%90app-Patterns">Useful Ðapp Patterns</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/web.js-0.9">web.js 0.9</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Web3-Secret-Storage-DefDef">Web3 Secret Storage DefDef</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Web3-Secret-Storage-Definition">Web3 Secret Storage Definition</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/web3js-api-reference">web3js api reference</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/What-is-Ethereum">What is Ethereum</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Whisper">Whisper</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Whisper-Overview">Whisper Overview</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Whisper-pages">Whisper pages</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Whisper-PoC-2-Protocol-Spec">Whisper PoC 2 Protocol Spec</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Whisper-PoC-2-Wire-Protocol">Whisper PoC 2 Wire Protocol</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Whisper-Wire-Protocol">Whisper Wire Protocol</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/White-Paper">White Paper</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Wiki:-ethresear.ch-Sharding-Compendium">Wiki: ethresear.ch Sharding Compendium</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/wikinew">wikinew</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/Wishlist">Wishlist</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%C3%90App-Development">ÐApp Development</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%C3%90%CE%9EV-Technologies">ÐΞV Technologies</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%C3%90%CE%9EVp2p-Wire-Protocol">ÐΞVp2p Wire Protocol</a></strong>
        </li>
        <li class="Box-row wiki-more-pages">
          <strong><a class="d-block" href="/ethereum/wiki/wiki/%D8%A7%D9%84%D8%B9%D8%B1%D8%A8%D9%8A%D8%A9">العربية</a></strong>
        </li>
        <li class="Box-row wiki-more-pages-link">
          <button type="button" class="f6 mx-auto btn-link muted-link js-wiki-more-pages-link">
            Show 216 more pages…
          </button>
        </li>
    </ul>
  </div>
</div>

      </div>

        <div class="gollum-markdown-content">
          <div class="Box Box--condensed mb-4">
            <div class="Box-body wiki-custom-sidebar  markdown-body">
              

<p><strong>Contents</strong></p>
<ul>
<li><a href="#basics">Basics</a></li>
<li><a href="#rd">R&amp;D</a></li>
<li><a href="#ethereum-virtual-machine-evm">Ethereum Virtual Machine (EVM)</a></li>
<li><a href="#ethereum-clients-tools-wallets-dapp-browsers-and-other-projects">Ethereum clients, tools, wallets, dapp browsers and other projects</a></li>
<li><a href="#%C3%B0app-development">ÐApp Development</a></li>
<li><a href="#infrastructure">Infrastructure</a></li>
<li><a href="#networking">Networking</a></li>
<li><a href="#ethereum-technologies">Ethereum Technologies</a></li>
<li><a href="#ethashdashimoto">Ethash/Dashimoto</a></li>
<li><a href="#whisper">Whisper</a></li>
</ul>

<h1>
<a id="user-content-basics" class="anchor" href="#basics" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Basics</h1>
<ul>
<li><a href="https://github.com/ethereum/wiki/wiki/">Home</a></li>
<li><a href="https://github.com/ethereum/wiki/wiki/White-Paper">Ethereum Whitepaper</a></li>
<li><a href="https://github.com/ethereum/wiki/wiki/Ethereum-introduction">Ethereum Introduction</a></li>
<li><a href="https://github.com/ethereum/wiki/wiki/Decentralized-apps-(dapps)">Uses: DAOs and dapps</a></li>
<li><a href="https://github.com/ethereum/wiki/wiki/Getting-Ether">Getting Ether</a></li>
<li><a href="https://github.com/ethereum/wiki/wiki/Releases">Releases</a></li>
<li><a href="https://github.com/ethereum/wiki/wiki/FAQs">FAQs</a></li>
<li><a href="https://github.com/ethereum/wiki/wiki/Design-Rationale">Design Rationale</a></li>
<li>EVM intro: <a href="https://ethereum.github.io/yellowpaper/paper.pdf" rel="nofollow">Ethereum Yellow Paper</a>, <a href="https://github.com/chronaeon/beigepaper">Beige Paper</a> and <a href="https://github.com/ethereum/py-evm">Py-EVM</a>.</li>
<li>
<a href="https://github.com/ethereum/ethereum.org/wiki">Wiki for (old) website</a> (still a good introduction)</li>
<li><a href="https://github.com/ethereum/wiki/wiki/Glossary">Glossary</a></li>
</ul>
<h1>
<a id="user-content-rd" class="anchor" href="#rd" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><a href="https://github.com/ethereum/wiki/wiki/R&amp;D">R&amp;D</a>
</h1>
<ul>
<li>
<a href="https://github.com/ethereum/wiki/wiki/Sharding-introduction-R&amp;D-compendium">Sharding introduction &amp; R&amp;D Compendium</a>, <a href="https://github.com/ethereum/wiki/wiki/Sharding-FAQs">FAQs</a> &amp; <a href="https://github.com/ethereum/wiki/wiki/Sharding-roadmap">roadmap</a>
</li>
<li>
<a href="https://github.com/ethereum/wiki/wiki/Casper-Proof-of-Stake-compendium">Casper Proof-of-Stake compendium</a> and <a href="https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQs">FAQs</a>.</li>
<li><a href="https://github.com/ethereum/wiki/wiki/Alternative-blockchains,-randomness,-economics,-and-other-research-topics">Alternative blockchains, randomness, economics, and other research topics</a></li>
<li><a href="https://github.com/ethereum/wiki/wiki/Problems">Hard Problems of Cryptocurrency</a></li>
<li><a href="https://github.com/ethereum/wiki/wiki/Governance-compendium">Governance</a></li>
</ul>
<h1>
<a id="user-content-ethereum-virtual-machine-evm" class="anchor" href="#ethereum-virtual-machine-evm" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><a href="https://github.com/ethereum/wiki/wiki/Ethereum-Virtual-Machine-(EVM)-Awesome-List">Ethereum Virtual Machine (EVM)</a>
</h1>
<h1>
<a id="user-content-ethereum-clients-tools-wallets-dapp-browsers-and-other-projects" class="anchor" href="#ethereum-clients-tools-wallets-dapp-browsers-and-other-projects" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><a href="https://github.com/ethereum/wiki/wiki/Clients,-tools,-dapp-browsers,-wallets-and-other-projects">Ethereum clients, tools, wallets, dapp browsers and other projects</a>
</h1>
<h1>
<a id="user-content-Ðapp-development" class="anchor" href="#%C3%90app-development" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><a href="https://github.com/ethereum/wiki/wiki/%C3%90App-Development">ÐApp Development</a>
</h1>
<h1>
<a id="user-content-infrastructure" class="anchor" href="#infrastructure" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Infrastructure</h1>
<ul>
<li><a href="https://github.com/ethereum/wiki/wiki/Ethereum-Chain-Spec-Format">Chain Spec Format</a></li>
<li><a href="https://github.com/ethereum/wiki/wiki/ICAP:-Inter-exchange-Client-Address-Protocol">Inter-exchange Client Address Protocol</a></li>
<li><a href="https://github.com/ethereum/wiki/wiki/URL-Hint-Protocol">URL Hint Protocol</a></li>
<li><a href="https://github.com/ethereum/wiki/wiki/NatSpec-Determination">NatSpec Determination</a></li>
<li><a href="https://github.com/ethereum/wiki/wiki/Network-Status">Network Status</a></li>
<li><a href="https://github.com/ethereum/wiki/wiki/Raspberry-Pi-instructions">Raspberry Pi</a></li>
<li><a href="https://github.com/ethereum/wiki/wiki/Mining">Mining</a></li>
<li><a href="https://github.com/ethereum/wiki/wiki/Licensing">Licensing</a></li>
<li><a href="https://github.com/ethereum/wiki/wiki/Consortium-Chain-Development">Consortium Chain Development</a></li>
</ul>
<h1>
<a id="user-content-networking" class="anchor" href="#networking" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Networking</h1>
<ul>
<li><a href="https://github.com/ethereum/devp2p/blob/master/caps/eth.md">Ethereum Wire Protocol</a></li>
<li><a href="https://libp2p.io/" rel="nofollow">libp2p</a></li>
<li><a href="https://github.com/ethereum/devp2p">devp2p Specifications</a></li>
<li><a href="https://github.com/ethereum/wiki/wiki/libp2p-Whitepaper">devp2p Whitepaper (old)</a></li>
</ul>
<h1>
<a id="user-content-ethereum-technologies" class="anchor" href="#ethereum-technologies" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Ethereum Technologies</h1>
<ul>
<li><a href="https://github.com/ethereum/wiki/wiki/RLP">RLP Encoding</a></li>
<li><a href="https://github.com/ethereum/wiki/wiki/Patricia-Tree">Patricia Tree</a></li>
<li><a href="https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition">Web3 Secret Storage</a></li>
<li><a href="https://github.com/ethereum/wiki/wiki/Light-client-protocol">Light client protocol</a></li>
<li><a href="https://github.com/ethereum/wiki/wiki/Subtleties">Subtleties</a></li>
<li><a href="https://solidity.readthedocs.io/en/latest/" rel="nofollow">Solidity Documentation</a></li>
<li><a href="https://github.com/ethereum/wiki/wiki/Ethereum-Natural-Specification-Format">NatSpec Format</a></li>
<li><a href="https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI">Contract ABI</a></li>
<li><a href="http://github.com/ethereum/wiki/wiki/Bad-Block-Reporting">Bad Block Reporting</a></li>
<li><a href="http://github.com/ethereum/wiki/wiki/Bad-Chain-Canary">Bad Chain Canary</a></li>
</ul>
<h1>
<a id="user-content-ethashdashimoto" class="anchor" href="#ethashdashimoto" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Ethash/Dashimoto</h1>
<ul>
<li><a href="https://github.com/ethereum/wiki/wiki/Ethash">Ethash</a></li>
<li><a href="https://ethereum.github.io/yellowpaper/paper.pdf#appendix.J" rel="nofollow">Ethash Yellow Paper appendix</a></li>
<li><a href="https://github.com/ethereum/wiki/wiki/Ethash-C-API">Ethash C API</a></li>
<li><a href="https://github.com/ethereum/wiki/wiki/Ethash-DAG">Ethash DAG</a></li>
</ul>
<h1>
<a id="user-content-whisper" class="anchor" href="#whisper" aria-hidden="true"><svg class="octicon octicon-link" viewbox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><a href="https://github.com/ethereum/wiki/wiki/Whisper-pages">Whisper</a>
</h1>
<ul>
<li><a href="https://github.com/ethereum/wiki/wiki/Whisper">Whisper Proposal</a></li>
<li><a href="https://github.com/ethereum/wiki/wiki/Whisper-Overview">Whisper Overview</a></li>
<li><a href="https://github.com/ethereum/wiki/wiki/Whisper-Wire-Protocol">PoC-1 Wire protocol</a></li>
<li><a href="https://github.com/ethereum/wiki/wiki/Whisper-PoC-2-Wire-Protocol">PoC-2 Wire protocol</a></li>
<li><a href="https://github.com/ethereum/wiki/wiki/Whisper-PoC-2-Protocol-Spec">PoC-2 Whitepaper</a></li>
</ul>
<p>0x927c0E368722206312D243417dA9797424b56434</p>

            </div>
          </div>
        </div>

      <h5 class="mt-0 mb-2">Clone this wiki locally</h5>
      <div class="width-full input-group">
        <input
            id="wiki-clone-url"
            type="text"
            data-autoselect
            class="form-control input-sm text-small text-gray input-monospace"
            aria-label="Clone URL for this wiki"
            value="https://github.com/ethereum/wiki.wiki.git"
            readonly>
        <span class="input-group-button">
          <clipboard-copy for="wiki-clone-url" aria-label="Copy to clipboard" class="btn btn-sm zeroclipboard-button">
            <svg class="octicon octicon-clippy" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M2 13h4v1H2v-1zm5-6H2v1h5V7zm2 3V8l-3 3 3 3v-2h5v-2H9zM4.5 9H2v1h2.5V9zM2 12h2.5v-1H2v1zm9 1h1v2c-.02.28-.11.52-.3.7-.19.18-.42.28-.7.3H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1h3c0-1.11.89-2 2-2 1.11 0 2 .89 2 2h3c.55 0 1 .45 1 1v5h-1V6H1v9h10v-2zM2 5h8c0-.55-.45-1-1-1H8c-.55 0-1-.45-1-1s-.45-1-1-1-1 .45-1 1-.45 1-1 1H3c-.55 0-1 .45-1 1z"/></svg>
          </clipboard-copy>
        </span>
      </div>
    </div>
  </div>


  </div>
</div>


    </main>
  </div>
  

  </div>

        
<div class="footer container-lg width-full p-responsive" role="contentinfo">
  <div class="position-relative d-flex flex-row-reverse flex-lg-row flex-wrap flex-lg-nowrap flex-justify-center flex-lg-justify-between pt-6 pb-2 mt-6 f6 text-gray border-top border-gray-light ">
    <ul class="list-style-none d-flex flex-wrap col-12 col-lg-5 flex-justify-center flex-lg-justify-between mb-2 mb-lg-0">
      <li class="mr-3 mr-lg-0">&copy; 2019 GitHub, Inc.</li>
        <li class="mr-3 mr-lg-0"><a data-ga-click="Footer, go to terms, text:terms" href="https://github.com/site/terms">Terms</a></li>
        <li class="mr-3 mr-lg-0"><a data-ga-click="Footer, go to privacy, text:privacy" href="https://github.com/site/privacy">Privacy</a></li>
        <li class="mr-3 mr-lg-0"><a data-ga-click="Footer, go to security, text:security" href="https://github.com/security">Security</a></li>
        <li class="mr-3 mr-lg-0"><a href="https://githubstatus.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
        <li><a data-ga-click="Footer, go to help, text:help" href="https://help.github.com">Help</a></li>
    </ul>

    <a aria-label="Homepage" title="GitHub" class="footer-octicon d-none d-lg-block mx-lg-4" href="https://github.com">
      <svg height="24" class="octicon octicon-mark-github" viewBox="0 0 16 16" version="1.1" width="24" aria-hidden="true"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"/></svg>
</a>
   <ul class="list-style-none d-flex flex-wrap col-12 col-lg-5 flex-justify-center flex-lg-justify-between mb-2 mb-lg-0">
        <li class="mr-3 mr-lg-0"><a data-ga-click="Footer, go to contact, text:contact" href="https://github.com/contact">Contact GitHub</a></li>
        <li class="mr-3 mr-lg-0"><a href="https://github.com/pricing" data-ga-click="Footer, go to Pricing, text:Pricing">Pricing</a></li>
      <li class="mr-3 mr-lg-0"><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li class="mr-3 mr-lg-0"><a href="https://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
        <li class="mr-3 mr-lg-0"><a href="https://github.blog" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
        <li><a data-ga-click="Footer, go to about, text:about" href="https://github.com/about">About</a></li>

    </ul>
  </div>
  <div class="d-flex flex-justify-center pb-6">
    <span class="f6 text-gray-light"></span>
  </div>
</div>



  <div id="ajax-error-message" class="ajax-error-message flash flash-error">
    <svg class="octicon octicon-alert" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 000 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 00.01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"/></svg>
    <button type="button" class="flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
      <svg class="octicon octicon-x" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>
    </button>
    You can’t perform that action at this time.
  </div>


    <script crossorigin="anonymous" integrity="sha512-MrUcN+hgChDZDTAVylV8vD9A3LsRw+BYljt0zN5Vg+W9AEJQnm9vLJOKGGpvTsTnAc7tGelwlAQOCEBFVZlZsA==" type="application/javascript" src="https://github.githubassets.com/assets/compat-bootstrap-fdda7608.js"></script>
    <script crossorigin="anonymous" integrity="sha512-3pK6Zm+ZRKPiJxJ2ke9B0jELEKMYst0DNGEh/3SL8xWXiDH8YfiVJ76vu8uJp52EQcdDPd0MDICVpeLAGJUKxA==" type="application/javascript" src="https://github.githubassets.com/assets/frameworks-313622ea.js"></script>
    
    <script crossorigin="anonymous" async="async" integrity="sha512-XLBdoXeWS/EVDh2OsbLydpdoH56FDr3VBoJdaGoUdXmnfF5XYMYzyzrmQyIiMx8xOukAsl/y2scVf95zeFL7lQ==" type="application/javascript" src="https://github.githubassets.com/assets/github-bootstrap-0a0636af.js"></script>
    
      <script crossorigin="anonymous" async="async" integrity="sha512-CA2b6/ZoYbVCnxH4uG8Qut5rZBE2eDiKmluIIDrM5pMqFZkiNwPKjmo5sVAz4Xt4ZIdp4MiehIRwZK+AYv4N8Q==" type="application/javascript" src="https://github.githubassets.com/assets/wiki-1ba650a5.js"></script>

    
  <div class="js-stale-session-flash flash flash-warn flash-banner" hidden
    >
    <svg class="octicon octicon-alert" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 000 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 00.01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"/></svg>
    <span class="js-stale-session-flash-signed-in" hidden>You signed in with another tab or window. <a href="">Reload</a> to refresh your session.</span>
    <span class="js-stale-session-flash-signed-out" hidden>You signed out in another tab or window. <a href="">Reload</a> to refresh your session.</span>
  </div>
  <template id="site-details-dialog">
  <details class="details-reset details-overlay details-overlay-dark lh-default text-gray-dark hx_rsm" open>
    <summary role="button" aria-label="Close dialog"></summary>
    <details-dialog class="Box Box--overlay d-flex flex-column anim-fade-in fast hx_rsm-dialog hx_rsm-modal">
      <button class="Box-btn-octicon m-0 btn-octicon position-absolute right-0 top-0" type="button" aria-label="Close dialog" data-close-dialog>
        <svg class="octicon octicon-x" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>
      </button>
      <div class="octocat-spinner my-6 js-details-dialog-spinner"></div>
    </details-dialog>
  </details>
</template>

  <div class="Popover js-hovercard-content position-absolute" style="display: none; outline: none;" tabindex="0">
  <div class="Popover-message Popover-message--bottom-left Popover-message--large Box box-shadow-large" style="width:360px;">
  </div>
</div>

  <div aria-live="polite" class="js-global-screen-reader-notice sr-only"></div>

  </body>
</html>

